unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
AR='ar'
export AR
AS='as'
export AS
BASH='/nix/store/a4yw1svqqk4d8lhwinn9xp847zz9gfma-bash-4.4-p23/bin/bash'
CC='gcc'
export CC
CGO_ENABLED='1'
export CGO_ENABLED
CONFIG_SHELL='/nix/store/a4yw1svqqk4d8lhwinn9xp847zz9gfma-bash-4.4-p23/bin/bash'
export CONFIG_SHELL
CXX='g++'
export CXX
GDK_PIXBUF_MODULE_FILE='/nix/store/rr90kjj9hscb3hsp9n85b3rlgkx5cy0r-librsvg-2.50.5/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache'
export GDK_PIXBUF_MODULE_FILE
GETTEXTDATADIRS='/nix/store/rs4ijdr8xqpy9cii27576y6kwcvd7gn6-gettext-0.21/share/gettext:/nix/store/dcb3cyba5wl6qimv6vwdpbi0kg0g1nlb-glib-2.68.2/share/gettext:/nix/store/fdjrhdgvhic14jg6llvm6vz2jvgnhfl6-gtk+3-3.24.27/share/gettext:/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1/share/gettext'
export GETTEXTDATADIRS
GI_TYPELIB_PATH='/nix/store/qdc7f6wraiwlz2sxbfqn70s81b1788mz-atk-2.36.0/lib/girepository-1.0:/nix/store/z5qhhrkms8aivbj6z20gx0n2fyga3b9y-gdk-pixbuf-2.42.6/lib/girepository-1.0:/nix/store/2bqip8j6v2hxpafpsaahfdq851i01nan-gsettings-desktop-schemas-40.0/lib/girepository-1.0:/nix/store/yjlx3r00yshl6z8r8xdc008mmh7z13s9-harfbuzz-2.8.0/lib/girepository-1.0:/nix/store/5hg65f2mcc10akh1m3ap7ficws1cs5r0-pango-1.48.4/lib/girepository-1.0:/nix/store/fdjrhdgvhic14jg6llvm6vz2jvgnhfl6-gtk+3-3.24.27/lib/girepository-1.0:/nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6/lib/girepository-1.0:/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1/lib/girepository-1.0:/nix/store/95x3ix0h0qn44b52md5qdgrqjwzhg48l-gobject-introspection-1.68.0/lib/girepository-1.0:/nix/store/rr90kjj9hscb3hsp9n85b3rlgkx5cy0r-librsvg-2.50.5/lib/girepository-1.0'
export GI_TYPELIB_PATH
GOTOOLDIR='/nix/store/kgc4n50pzk2wv77lalnzgkws069ddghf-gotools-unstable-2021-01-13/bin'
export GOTOOLDIR
GSETTINGS_SCHEMAS_PATH='/nix/store/2bqip8j6v2hxpafpsaahfdq851i01nan-gsettings-desktop-schemas-40.0/share/gsettings-schemas/gsettings-desktop-schemas-40.0:/nix/store/fdjrhdgvhic14jg6llvm6vz2jvgnhfl6-gtk+3-3.24.27/share/gsettings-schemas/gtk+3-3.24.27:/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1/share/gsettings-schemas/gtk4-4.2.1'
export GSETTINGS_SCHEMAS_PATH
HOSTTYPE='x86_64'
HOST_PATH='/nix/store/d9zs9xg86lhqjqni0v8h2ibdrjb57fn4-glib-2.68.2-dev/bin:/nix/store/rs4ijdr8xqpy9cii27576y6kwcvd7gn6-gettext-0.21/bin:/nix/store/vm72kab463p1ln9amf8z3gm55nsgysn0-glib-2.68.2-bin/bin:/nix/store/vsk1qc1na4izgz461vxkvn655yvarfr7-gtk+3-3.24.27-dev/bin:/nix/store/gp87jysb40b919z8s7ixcilwdsiyl0rp-cairo-1.16.0-dev/bin:/nix/store/l7sxzcqbxbgcvrra9lz4ndm6zzlpbdhx-freetype-2.10.4-dev/bin:/nix/store/wqgk4p3hch2mz8yl7giy4dm0yk3n89gf-bzip2-1.0.6.0.2-bin/bin:/nix/store/7jr6g5qmxf7ygiyxjh1iwqbx88gp6qyz-libpng-apng-1.6.37-dev/bin:/nix/store/bifnxz3cmryik3g1wrcjaz89q1yxm8gx-fontconfig-2.13.92-bin/bin:/nix/store/x5kjng6iha7kcdm3p12fxfvzg09wizwc-expat-2.2.10-dev/bin:/nix/store/xr0fii2pg2iqlnszl7sz7y7z78065rqx-fribidi-1.0.10/bin:/nix/store/qxak159dp4qrmvsck3kjkin4bszbr6ab-gdk-pixbuf-2.42.6-dev/bin:/nix/store/9bvh505ip18m827nzdspn5xv7cba55dr-libjpeg-turbo-2.0.6-bin/bin:/nix/store/4h03bnxv1c21yzl4vff0z8h2gh55k07y-xz-5.2.5-bin/bin:/nix/store/ckasl98a4564zf7m3kya2sj9vgmczxns-libtiff-4.2.0-bin/bin:/nix/store/z5qhhrkms8aivbj6z20gx0n2fyga3b9y-gdk-pixbuf-2.42.6/bin:/nix/store/1b2ahzbjq1fqnm7riz1a9s0w3rsnaysy-harfbuzz-2.8.0-dev/bin:/nix/store/cfbph0p4dsiq23psagf098cwsaq7s0f2-graphite2-1.3.14/bin:/nix/store/gr54jx66hcj3qviliym9as4xq2z00i8p-pango-1.48.4-bin/bin:/nix/store/7dk1rbgg0rpzf1kvi3s5pblisimjkp8d-wayland-1.19.0-bin/bin:/nix/store/psspl8przjwxpzkn7q0c5ggdn877jbi1-cups-2.3.3-dev/bin:/nix/store/r4l42q10l4lr9s1lkc9hh8pssyprk4np-cups-2.3.3/bin:/nix/store/fdjrhdgvhic14jg6llvm6vz2jvgnhfl6-gtk+3-3.24.27/bin:/nix/store/niw855nnjgqbq2s0iqxrk9xs5mr10rz8-gtk4-4.2.1-dev/bin:/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1/bin:/nix/store/jxrp8rx8kwxligp0zi5fdl44bgmf1d18-gobject-introspection-1.68.0-dev/bin:/nix/store/b8mzg1b1s3lh2zvmz1yichqprzhi0f2d-pkg-config-wrapper-0.29.2/bin:/nix/store/rr90kjj9hscb3hsp9n85b3rlgkx5cy0r-librsvg-2.50.5/bin:/nix/store/hiqm2sg34wrjb7i9h8ac666vnd8aa5gh-go-1.20.8/bin:/nix/store/3pfyf74sydyqgsslqcww8jvb5jkjph8g-gopls-0.6.10/bin:/nix/store/kgc4n50pzk2wv77lalnzgkws069ddghf-gotools-unstable-2021-01-13/bin:/nix/store/6nj30hx47qpqmjyvmhdqifljrks4hk3h-git-2.31.1/bin:/nix/store/3f1vfrc7p2kr8ciqhkfhfz5vhpfpsqpb-minitime/bin:/nix/store/gh3l7mkk8ddlmv4bm5xmzms6958q298w-generate/bin:/nix/store/969bnrdg6r7ssbxdk8qqcv1nwkaq05jm-build/bin:/nix/store/fz2wxkv4b7xgkryvzd6qihs48qch159g-patchelf-x86_64/bin:/nix/store/icrgmqm23dphvwi634ag4kgflf93bkdg-patchelf-aarch64/bin:/nix/store/0vkw1m51q34dr64z5i87dy99an4hfmyg-coreutils-8.32/bin:/nix/store/j1pkn9109012wwi992xnfj53razgbdvm-findutils-4.7.0/bin:/nix/store/frf2p5qmgs88f3c77j3zs92rpylxh84w-diffutils-3.7/bin:/nix/store/s7crpcbda751bx87jyrf989ln8l6vbg3-gnused-4.8/bin:/nix/store/0i6vphc3vnr8mg0gxjr61564hnp0s2md-gnugrep-3.6/bin:/nix/store/yihw9g7f4b1qcvblj3kr03jfy1nj3kq1-gawk-5.1.0/bin:/nix/store/rc34ffh62g42vavbsiw5aididd1dmwl4-gnutar-1.34/bin:/nix/store/9hxb506q8285gckhdacr72qx3zlkxrl6-gzip-1.10/bin:/nix/store/wqgk4p3hch2mz8yl7giy4dm0yk3n89gf-bzip2-1.0.6.0.2-bin/bin:/nix/store/g2fna66r9m081w1h1zj857j06jigx6cq-gnumake-4.3/bin:/nix/store/a4yw1svqqk4d8lhwinn9xp847zz9gfma-bash-4.4-p23/bin:/nix/store/8gglmz7sf4l587n38vh3z7y8h8lflaa3-patch-2.7.6/bin:/nix/store/4h03bnxv1c21yzl4vff0z8h2gh55k07y-xz-5.2.5-bin/bin'
export HOST_PATH
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LD='ld'
export LD
MACHTYPE='x86_64-unknown-linux-gnu'
NIX_BINTOOLS='/nix/store/pd21dgf1vdpxbfx7ilbwb8hs9l3wd6xd-binutils-wrapper-2.35.1'
export NIX_BINTOOLS
NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu='1'
export NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu
NIX_BUILD_CORES='16'
export NIX_BUILD_CORES
NIX_CC='/nix/store/35pnk5kwi26m3ph2bc7dxwjnavpzl8cn-gcc-wrapper-10.3.0'
export NIX_CC
NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu='1'
export NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu
NIX_CFLAGS_COMPILE=' -frandom-seed=flxz0snzmv -isystem /nix/store/x26skdnbygrryb189ghkk00f419vy9ci-atk-2.36.0-dev/include -isystem /nix/store/d9zs9xg86lhqjqni0v8h2ibdrjb57fn4-glib-2.68.2-dev/include -isystem /nix/store/qs5v2ykrd37qda7fzadi7sg7sa2ji1rs-zlib-1.2.11-dev/include -isystem /nix/store/flgjhqip0r085k5682v55l57znfprdsr-libffi-3.3-dev/include -isystem /nix/store/rs4ijdr8xqpy9cii27576y6kwcvd7gn6-gettext-0.21/include -isystem /nix/store/7wlmpzdj1rpkhalacar5c0qdkmfr65ap-glibc-iconv-2.32/include -isystem /nix/store/vsk1qc1na4izgz461vxkvn655yvarfr7-gtk+3-3.24.27-dev/include -isystem /nix/store/jzv4fi6lg44yan8hhnlaxq3zhd6n4vg4-at-spi2-atk-2.38.0/include -isystem /nix/store/gp87jysb40b919z8s7ixcilwdsiyl0rp-cairo-1.16.0-dev/include -isystem /nix/store/lwblrig5nar7ymz3dkvjrffsyihcwpxd-fontconfig-2.13.92-dev/include -isystem /nix/store/l7sxzcqbxbgcvrra9lz4ndm6zzlpbdhx-freetype-2.10.4-dev/include -isystem /nix/store/n799f218s2r8rmi16nprj7gcal8ndfj8-bzip2-1.0.6.0.2-dev/include -isystem /nix/store/7jr6g5qmxf7ygiyxjh1iwqbx88gp6qyz-libpng-apng-1.6.37-dev/include -isystem /nix/store/x5kjng6iha7kcdm3p12fxfvzg09wizwc-expat-2.2.10-dev/include -isystem /nix/store/iqwkmj5fn9694mbdqlvah0dh8xcajr93-pixman-0.38.4/include -isystem /nix/store/lrmrlhzb4iqqs81knxaql9xdibg0zgf4-libXext-1.3.4-dev/include -isystem /nix/store/a9yrg6p2jfy5cwxv08m9ghhjv6494cqf-xorgproto-2021.3/include -isystem /nix/store/4pzyc0mgdh7jj14skn4s39jph36wjk17-libXau-1.0.9-dev/include -isystem /nix/store/6rjb1swigcr2ddhkws0xm9ymcd6hnlxg-libXrender-0.9.10-dev/include -isystem /nix/store/igwzj9zcrfwnvaiw4drzv17ahkap48r9-libX11-1.7.0-dev/include -isystem /nix/store/8lki9k45xcflvpx1xn823syiwl5i9zm1-libxcb-1.14-dev/include -isystem /nix/store/qs9bwvn94w9d8d347hd7wxvfh6k1n8pk-xcb-util-0.4.0-dev/include -isystem /nix/store/svrdwmniwpgl0lpm1zlqawgvmk3fa8wq-libGL-1.3.3-dev/include -isystem /nix/store/l0h4hfzyy3q6klvxh6g7i58clgrc2m4i-libglvnd-1.3.3-dev/include -isystem /nix/store/xr0fii2pg2iqlnszl7sz7y7z78065rqx-fribidi-1.0.10/include -isystem /nix/store/qxak159dp4qrmvsck3kjkin4bszbr6ab-gdk-pixbuf-2.42.6-dev/include -isystem /nix/store/sbs9ldcbkn895qxcw85bggvzplisd4fy-libtiff-4.2.0-dev/include -isystem /nix/store/7rijhsnn683cvfwijs8jhhihglvpflq4-libjpeg-turbo-2.0.6-dev/include -isystem /nix/store/jjyxxm3p18cz5cjz9j58rhw05xy2283v-xz-5.2.5-dev/include -isystem /nix/store/2bqip8j6v2hxpafpsaahfdq851i01nan-gsettings-desktop-schemas-40.0/include -isystem /nix/store/kw9nw48nh883hqy4d49mvagz3ha2v69q-libICE-1.0.10-dev/include -isystem /nix/store/pgwabcc67rrx91in49xxxwg1v2q3xfcg-libSM-1.2.3-dev/include -isystem /nix/store/0v3kckadnj5hrl8hfyc808kmdnq0hkp6-libXcomposite-0.4.5-dev/include -isystem /nix/store/126x64p3j7rxkx1rmyb21dqm6x25091a-libXfixes-5.0.3-dev/include -isystem /nix/store/9wvsyx10kfkx9s7vv7ys56svs490dy8s-libXcursor-1.2.0-dev/include -isystem /nix/store/ww202c7vbsxg3vmla6f31lf8fyd9vgjr-libXi-1.7.10-dev/include -isystem /nix/store/wv8145lrnz3r205cqg7bjyw9297yrvrx-libXrandr-1.5.2-dev/include -isystem /nix/store/c52730cidby7p2qwwq8cf91anqrni6lg-pango-1.48.4-dev/include -isystem /nix/store/1b2ahzbjq1fqnm7riz1a9s0w3rsnaysy-harfbuzz-2.8.0-dev/include -isystem /nix/store/cfbph0p4dsiq23psagf098cwsaq7s0f2-graphite2-1.3.14/include -isystem /nix/store/cb2q689wanznfwxl9q01jcjrv9k8ysms-libXft-2.3.3-dev/include -isystem /nix/store/9zrf8sw86f8pc7vls1xhw0lhngxhp125-wayland-1.19.0-dev/include -isystem /nix/store/ii345i1r2n4lhcqb9ny55l6mslrn4z7w-libXinerama-1.1.4-dev/include -isystem /nix/store/psspl8przjwxpzkn7q0c5ggdn877jbi1-cups-2.3.3-dev/include -isystem /nix/store/xa30jvsf2qnwks32y2hdm5qn57spyhh6-gmp-6.2.1-dev/include -isystem /nix/store/niw855nnjgqbq2s0iqxrk9xs5mr10rz8-gtk4-4.2.1-dev/include -isystem /nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6/include -isystem /nix/store/jxrp8rx8kwxligp0zi5fdl44bgmf1d18-gobject-introspection-1.68.0-dev/include -isystem /nix/store/yzb5ppdqld4jahpazbk4mhfi72fp2skd-librsvg-2.50.5-dev/include -isystem /nix/store/x26skdnbygrryb189ghkk00f419vy9ci-atk-2.36.0-dev/include -isystem /nix/store/d9zs9xg86lhqjqni0v8h2ibdrjb57fn4-glib-2.68.2-dev/include -isystem /nix/store/qs5v2ykrd37qda7fzadi7sg7sa2ji1rs-zlib-1.2.11-dev/include -isystem /nix/store/flgjhqip0r085k5682v55l57znfprdsr-libffi-3.3-dev/include -isystem /nix/store/rs4ijdr8xqpy9cii27576y6kwcvd7gn6-gettext-0.21/include -isystem /nix/store/7wlmpzdj1rpkhalacar5c0qdkmfr65ap-glibc-iconv-2.32/include -isystem /nix/store/vsk1qc1na4izgz461vxkvn655yvarfr7-gtk+3-3.24.27-dev/include -isystem /nix/store/jzv4fi6lg44yan8hhnlaxq3zhd6n4vg4-at-spi2-atk-2.38.0/include -isystem /nix/store/gp87jysb40b919z8s7ixcilwdsiyl0rp-cairo-1.16.0-dev/include -isystem /nix/store/lwblrig5nar7ymz3dkvjrffsyihcwpxd-fontconfig-2.13.92-dev/include -isystem /nix/store/l7sxzcqbxbgcvrra9lz4ndm6zzlpbdhx-freetype-2.10.4-dev/include -isystem /nix/store/n799f218s2r8rmi16nprj7gcal8ndfj8-bzip2-1.0.6.0.2-dev/include -isystem /nix/store/7jr6g5qmxf7ygiyxjh1iwqbx88gp6qyz-libpng-apng-1.6.37-dev/include -isystem /nix/store/x5kjng6iha7kcdm3p12fxfvzg09wizwc-expat-2.2.10-dev/include -isystem /nix/store/iqwkmj5fn9694mbdqlvah0dh8xcajr93-pixman-0.38.4/include -isystem /nix/store/lrmrlhzb4iqqs81knxaql9xdibg0zgf4-libXext-1.3.4-dev/include -isystem /nix/store/a9yrg6p2jfy5cwxv08m9ghhjv6494cqf-xorgproto-2021.3/include -isystem /nix/store/4pzyc0mgdh7jj14skn4s39jph36wjk17-libXau-1.0.9-dev/include -isystem /nix/store/6rjb1swigcr2ddhkws0xm9ymcd6hnlxg-libXrender-0.9.10-dev/include -isystem /nix/store/igwzj9zcrfwnvaiw4drzv17ahkap48r9-libX11-1.7.0-dev/include -isystem /nix/store/8lki9k45xcflvpx1xn823syiwl5i9zm1-libxcb-1.14-dev/include -isystem /nix/store/qs9bwvn94w9d8d347hd7wxvfh6k1n8pk-xcb-util-0.4.0-dev/include -isystem /nix/store/svrdwmniwpgl0lpm1zlqawgvmk3fa8wq-libGL-1.3.3-dev/include -isystem /nix/store/l0h4hfzyy3q6klvxh6g7i58clgrc2m4i-libglvnd-1.3.3-dev/include -isystem /nix/store/xr0fii2pg2iqlnszl7sz7y7z78065rqx-fribidi-1.0.10/include -isystem /nix/store/qxak159dp4qrmvsck3kjkin4bszbr6ab-gdk-pixbuf-2.42.6-dev/include -isystem /nix/store/sbs9ldcbkn895qxcw85bggvzplisd4fy-libtiff-4.2.0-dev/include -isystem /nix/store/7rijhsnn683cvfwijs8jhhihglvpflq4-libjpeg-turbo-2.0.6-dev/include -isystem /nix/store/jjyxxm3p18cz5cjz9j58rhw05xy2283v-xz-5.2.5-dev/include -isystem /nix/store/2bqip8j6v2hxpafpsaahfdq851i01nan-gsettings-desktop-schemas-40.0/include -isystem /nix/store/kw9nw48nh883hqy4d49mvagz3ha2v69q-libICE-1.0.10-dev/include -isystem /nix/store/pgwabcc67rrx91in49xxxwg1v2q3xfcg-libSM-1.2.3-dev/include -isystem /nix/store/0v3kckadnj5hrl8hfyc808kmdnq0hkp6-libXcomposite-0.4.5-dev/include -isystem /nix/store/126x64p3j7rxkx1rmyb21dqm6x25091a-libXfixes-5.0.3-dev/include -isystem /nix/store/9wvsyx10kfkx9s7vv7ys56svs490dy8s-libXcursor-1.2.0-dev/include -isystem /nix/store/ww202c7vbsxg3vmla6f31lf8fyd9vgjr-libXi-1.7.10-dev/include -isystem /nix/store/wv8145lrnz3r205cqg7bjyw9297yrvrx-libXrandr-1.5.2-dev/include -isystem /nix/store/c52730cidby7p2qwwq8cf91anqrni6lg-pango-1.48.4-dev/include -isystem /nix/store/1b2ahzbjq1fqnm7riz1a9s0w3rsnaysy-harfbuzz-2.8.0-dev/include -isystem /nix/store/cfbph0p4dsiq23psagf098cwsaq7s0f2-graphite2-1.3.14/include -isystem /nix/store/cb2q689wanznfwxl9q01jcjrv9k8ysms-libXft-2.3.3-dev/include -isystem /nix/store/9zrf8sw86f8pc7vls1xhw0lhngxhp125-wayland-1.19.0-dev/include -isystem /nix/store/ii345i1r2n4lhcqb9ny55l6mslrn4z7w-libXinerama-1.1.4-dev/include -isystem /nix/store/psspl8przjwxpzkn7q0c5ggdn877jbi1-cups-2.3.3-dev/include -isystem /nix/store/xa30jvsf2qnwks32y2hdm5qn57spyhh6-gmp-6.2.1-dev/include -isystem /nix/store/niw855nnjgqbq2s0iqxrk9xs5mr10rz8-gtk4-4.2.1-dev/include -isystem /nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6/include -isystem /nix/store/jxrp8rx8kwxligp0zi5fdl44bgmf1d18-gobject-introspection-1.68.0-dev/include -isystem /nix/store/yzb5ppdqld4jahpazbk4mhfi72fp2skd-librsvg-2.50.5-dev/include'
export NIX_CFLAGS_COMPILE
NIX_DEBUG_INFO_DIRS='/nix/store/bvyvmmvg0a4sw3xnx8pwc99x1sn7739l-gtk4-4.2.1-debug/lib/debug:/nix/store/mdzlc2h9vv5g6zv98rzlj4srqzqxc425-glib-2.68.2-debug/lib/debug'
export NIX_DEBUG_INFO_DIRS
NIX_ENFORCE_NO_NATIVE='1'
export NIX_ENFORCE_NO_NATIVE
NIX_HARDENING_ENABLE='fortify stackprotector pic strictoverflow format relro bindnow'
export NIX_HARDENING_ENABLE
NIX_INDENT_MAKE='1'
export NIX_INDENT_MAKE
NIX_LDFLAGS='-rpath /home/edjubert/workspace/hyprland-share-picker-gtk/outputs/out/lib64 -rpath /home/edjubert/workspace/hyprland-share-picker-gtk/outputs/out/lib  -L/nix/store/65ys3k6gn2s27apky0a0la7wryg3az9q-zlib-1.2.11/lib -L/nix/store/0d71ygfwbmy1xjlbj1v027dfmy9cqavy-libffi-3.3/lib -L/nix/store/rs4ijdr8xqpy9cii27576y6kwcvd7gn6-gettext-0.21/lib -L/nix/store/dcb3cyba5wl6qimv6vwdpbi0kg0g1nlb-glib-2.68.2/lib -L/nix/store/qdc7f6wraiwlz2sxbfqn70s81b1788mz-atk-2.36.0/lib -L/nix/store/jzv4fi6lg44yan8hhnlaxq3zhd6n4vg4-at-spi2-atk-2.38.0/lib -L/nix/store/5ymjz97754jc6alp50cq1i3iv0jbg8b2-bzip2-1.0.6.0.2/lib -L/nix/store/wrii6pcbfa17c976pnvbiclyndg2g0qy-libpng-apng-1.6.37/lib -L/nix/store/522y9xzwgvx16q6grwx25s4lyiizxvkk-freetype-2.10.4/lib -L/nix/store/9wcp4vp7s3nd5y9rzz9m7a7da45h2f8p-fontconfig-2.13.92-lib/lib -L/nix/store/nlqz3916vfh4fqwbnky1l5bf02n876y5-expat-2.2.10/lib -L/nix/store/iqwkmj5fn9694mbdqlvah0dh8xcajr93-pixman-0.38.4/lib -L/nix/store/77cvsy1r2ks5w7s5hfgcgks16w4c4bfr-libXau-1.0.9/lib -L/nix/store/xas0isszbd8wbswfc9vigfnz29qvbhzx-libXext-1.3.4/lib -L/nix/store/l2lkchcq0kwn56wqzls9vrgg22608vfk-libxcb-1.14/lib -L/nix/store/j1ah55qaqg5cfsg21y5ai55gdblkxh9c-libX11-1.7.0/lib -L/nix/store/il08jyg29dn3whmprp59rcriq4bsi4xr-libXrender-0.9.10/lib -L/nix/store/1ypsww11c48xklnkr42shnvypnsr16sf-xcb-util-0.4.0/lib -L/nix/store/iajdz6qbwvibw3w8vrkbjhrsnjvhpv2p-libGL-1.3.3/lib -L/nix/store/hpnazqkp4zbm2pkp1xj4whmld2zhwv0r-libglvnd-1.3.3/lib -L/nix/store/hzm5l793pisnacn6jd9d3akk6hlz4c5l-cairo-1.16.0/lib -L/nix/store/xr0fii2pg2iqlnszl7sz7y7z78065rqx-fribidi-1.0.10/lib -L/nix/store/0byg8crnnyg1wki90c9r9ffcv423q5f4-libjpeg-turbo-2.0.6/lib -L/nix/store/rdslqn6gj1a27laa1xcn0hm147v5an7z-xz-5.2.5/lib -L/nix/store/i77zlj776n76gccg50m43zaiinsspvrc-libtiff-4.2.0/lib -L/nix/store/z5qhhrkms8aivbj6z20gx0n2fyga3b9y-gdk-pixbuf-2.42.6/lib -L/nix/store/mm1ian83sd3j7k0a6sqa8fz8zjx7b4ad-libICE-1.0.10/lib -L/nix/store/0847w9k5272l4250n1qbbhnln4l8dpgz-libSM-1.2.3/lib -L/nix/store/0fyyj82hswq1zp93jgljf8gbijk7qn2c-libXfixes-5.0.3/lib -L/nix/store/h82a1nhyilcx1fdfky11hc0csvayqjjj-libXcomposite-0.4.5/lib -L/nix/store/v27v33b48amcd4g9i025kbivsa05w9gg-libXcursor-1.2.0/lib -L/nix/store/ap3z1askgsslhzgwsbqkm26ki8dmfjsb-libXi-1.7.10/lib -L/nix/store/8cxr4l160pqhyvszahmw9fbc63dzw8l9-libXrandr-1.5.2/lib -L/nix/store/cfbph0p4dsiq23psagf098cwsaq7s0f2-graphite2-1.3.14/lib -L/nix/store/yjlx3r00yshl6z8r8xdc008mmh7z13s9-harfbuzz-2.8.0/lib -L/nix/store/p4kbp56zpk65s7i30x8glphh3k5h9wgr-libXft-2.3.3/lib -L/nix/store/5hg65f2mcc10akh1m3ap7ficws1cs5r0-pango-1.48.4/lib -L/nix/store/pjxkg635vj6kv71chjc7x88mzrifdqly-wayland-1.19.0/lib -L/nix/store/1kn2z5frxza3jz19yav09vlzzk7zpk1p-libXinerama-1.1.4/lib -L/nix/store/lqwgi0in94ll5fwsbh8ligvn8l0vqn7v-gmp-6.2.1/lib -L/nix/store/slvjvi2f8c9y657iy546yri9k32vp107-cups-2.3.3-lib/lib -L/nix/store/fdjrhdgvhic14jg6llvm6vz2jvgnhfl6-gtk+3-3.24.27/lib -L/nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6/lib -L/nix/store/s1zssr1p8877nnd1ysxz6f3c4d7rlz18-vulkan-loader-1.2.162.0/lib -L/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1/lib -L/nix/store/95x3ix0h0qn44b52md5qdgrqjwzhg48l-gobject-introspection-1.68.0/lib -L/nix/store/rr90kjj9hscb3hsp9n85b3rlgkx5cy0r-librsvg-2.50.5/lib -L/nix/store/65ys3k6gn2s27apky0a0la7wryg3az9q-zlib-1.2.11/lib -L/nix/store/0d71ygfwbmy1xjlbj1v027dfmy9cqavy-libffi-3.3/lib -L/nix/store/rs4ijdr8xqpy9cii27576y6kwcvd7gn6-gettext-0.21/lib -L/nix/store/dcb3cyba5wl6qimv6vwdpbi0kg0g1nlb-glib-2.68.2/lib -L/nix/store/qdc7f6wraiwlz2sxbfqn70s81b1788mz-atk-2.36.0/lib -L/nix/store/jzv4fi6lg44yan8hhnlaxq3zhd6n4vg4-at-spi2-atk-2.38.0/lib -L/nix/store/5ymjz97754jc6alp50cq1i3iv0jbg8b2-bzip2-1.0.6.0.2/lib -L/nix/store/wrii6pcbfa17c976pnvbiclyndg2g0qy-libpng-apng-1.6.37/lib -L/nix/store/522y9xzwgvx16q6grwx25s4lyiizxvkk-freetype-2.10.4/lib -L/nix/store/9wcp4vp7s3nd5y9rzz9m7a7da45h2f8p-fontconfig-2.13.92-lib/lib -L/nix/store/nlqz3916vfh4fqwbnky1l5bf02n876y5-expat-2.2.10/lib -L/nix/store/iqwkmj5fn9694mbdqlvah0dh8xcajr93-pixman-0.38.4/lib -L/nix/store/77cvsy1r2ks5w7s5hfgcgks16w4c4bfr-libXau-1.0.9/lib -L/nix/store/xas0isszbd8wbswfc9vigfnz29qvbhzx-libXext-1.3.4/lib -L/nix/store/l2lkchcq0kwn56wqzls9vrgg22608vfk-libxcb-1.14/lib -L/nix/store/j1ah55qaqg5cfsg21y5ai55gdblkxh9c-libX11-1.7.0/lib -L/nix/store/il08jyg29dn3whmprp59rcriq4bsi4xr-libXrender-0.9.10/lib -L/nix/store/1ypsww11c48xklnkr42shnvypnsr16sf-xcb-util-0.4.0/lib -L/nix/store/iajdz6qbwvibw3w8vrkbjhrsnjvhpv2p-libGL-1.3.3/lib -L/nix/store/hpnazqkp4zbm2pkp1xj4whmld2zhwv0r-libglvnd-1.3.3/lib -L/nix/store/hzm5l793pisnacn6jd9d3akk6hlz4c5l-cairo-1.16.0/lib -L/nix/store/xr0fii2pg2iqlnszl7sz7y7z78065rqx-fribidi-1.0.10/lib -L/nix/store/0byg8crnnyg1wki90c9r9ffcv423q5f4-libjpeg-turbo-2.0.6/lib -L/nix/store/rdslqn6gj1a27laa1xcn0hm147v5an7z-xz-5.2.5/lib -L/nix/store/i77zlj776n76gccg50m43zaiinsspvrc-libtiff-4.2.0/lib -L/nix/store/z5qhhrkms8aivbj6z20gx0n2fyga3b9y-gdk-pixbuf-2.42.6/lib -L/nix/store/mm1ian83sd3j7k0a6sqa8fz8zjx7b4ad-libICE-1.0.10/lib -L/nix/store/0847w9k5272l4250n1qbbhnln4l8dpgz-libSM-1.2.3/lib -L/nix/store/0fyyj82hswq1zp93jgljf8gbijk7qn2c-libXfixes-5.0.3/lib -L/nix/store/h82a1nhyilcx1fdfky11hc0csvayqjjj-libXcomposite-0.4.5/lib -L/nix/store/v27v33b48amcd4g9i025kbivsa05w9gg-libXcursor-1.2.0/lib -L/nix/store/ap3z1askgsslhzgwsbqkm26ki8dmfjsb-libXi-1.7.10/lib -L/nix/store/8cxr4l160pqhyvszahmw9fbc63dzw8l9-libXrandr-1.5.2/lib -L/nix/store/cfbph0p4dsiq23psagf098cwsaq7s0f2-graphite2-1.3.14/lib -L/nix/store/yjlx3r00yshl6z8r8xdc008mmh7z13s9-harfbuzz-2.8.0/lib -L/nix/store/p4kbp56zpk65s7i30x8glphh3k5h9wgr-libXft-2.3.3/lib -L/nix/store/5hg65f2mcc10akh1m3ap7ficws1cs5r0-pango-1.48.4/lib -L/nix/store/pjxkg635vj6kv71chjc7x88mzrifdqly-wayland-1.19.0/lib -L/nix/store/1kn2z5frxza3jz19yav09vlzzk7zpk1p-libXinerama-1.1.4/lib -L/nix/store/lqwgi0in94ll5fwsbh8ligvn8l0vqn7v-gmp-6.2.1/lib -L/nix/store/slvjvi2f8c9y657iy546yri9k32vp107-cups-2.3.3-lib/lib -L/nix/store/fdjrhdgvhic14jg6llvm6vz2jvgnhfl6-gtk+3-3.24.27/lib -L/nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6/lib -L/nix/store/s1zssr1p8877nnd1ysxz6f3c4d7rlz18-vulkan-loader-1.2.162.0/lib -L/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1/lib -L/nix/store/95x3ix0h0qn44b52md5qdgrqjwzhg48l-gobject-introspection-1.68.0/lib -L/nix/store/rr90kjj9hscb3hsp9n85b3rlgkx5cy0r-librsvg-2.50.5/lib'
export NIX_LDFLAGS
NIX_LIB64_IN_SELF_RPATH='1'
NIX_NO_SELF_RPATH='1'
NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu='1'
export NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu
NIX_STORE='/nix/store'
export NIX_STORE
NM='nm'
export NM
OBJCOPY='objcopy'
export OBJCOPY
OBJDUMP='objdump'
export OBJDUMP
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='linux-gnu'
PATH='/nix/store/nn70k5w99m6y59ldxlnb1x6j4q8bbjbq-patchelf-0.12/bin:/nix/store/35pnk5kwi26m3ph2bc7dxwjnavpzl8cn-gcc-wrapper-10.3.0/bin:/nix/store/h3f8rn6wwanph9m3rc1gl0lldbr57w3l-gcc-10.3.0/bin:/nix/store/d32ym7m2p7lfb6gsghq1dhi61f694k0f-glibc-2.32-46-bin/bin:/nix/store/0vkw1m51q34dr64z5i87dy99an4hfmyg-coreutils-8.32/bin:/nix/store/pd21dgf1vdpxbfx7ilbwb8hs9l3wd6xd-binutils-wrapper-2.35.1/bin:/nix/store/77i6h1kjpdww9zzpvkmgyym2mz65yff1-binutils-2.35.1/bin:/nix/store/d9zs9xg86lhqjqni0v8h2ibdrjb57fn4-glib-2.68.2-dev/bin:/nix/store/rs4ijdr8xqpy9cii27576y6kwcvd7gn6-gettext-0.21/bin:/nix/store/vm72kab463p1ln9amf8z3gm55nsgysn0-glib-2.68.2-bin/bin:/nix/store/vsk1qc1na4izgz461vxkvn655yvarfr7-gtk+3-3.24.27-dev/bin:/nix/store/gp87jysb40b919z8s7ixcilwdsiyl0rp-cairo-1.16.0-dev/bin:/nix/store/l7sxzcqbxbgcvrra9lz4ndm6zzlpbdhx-freetype-2.10.4-dev/bin:/nix/store/wqgk4p3hch2mz8yl7giy4dm0yk3n89gf-bzip2-1.0.6.0.2-bin/bin:/nix/store/7jr6g5qmxf7ygiyxjh1iwqbx88gp6qyz-libpng-apng-1.6.37-dev/bin:/nix/store/bifnxz3cmryik3g1wrcjaz89q1yxm8gx-fontconfig-2.13.92-bin/bin:/nix/store/x5kjng6iha7kcdm3p12fxfvzg09wizwc-expat-2.2.10-dev/bin:/nix/store/xr0fii2pg2iqlnszl7sz7y7z78065rqx-fribidi-1.0.10/bin:/nix/store/qxak159dp4qrmvsck3kjkin4bszbr6ab-gdk-pixbuf-2.42.6-dev/bin:/nix/store/9bvh505ip18m827nzdspn5xv7cba55dr-libjpeg-turbo-2.0.6-bin/bin:/nix/store/4h03bnxv1c21yzl4vff0z8h2gh55k07y-xz-5.2.5-bin/bin:/nix/store/ckasl98a4564zf7m3kya2sj9vgmczxns-libtiff-4.2.0-bin/bin:/nix/store/z5qhhrkms8aivbj6z20gx0n2fyga3b9y-gdk-pixbuf-2.42.6/bin:/nix/store/1b2ahzbjq1fqnm7riz1a9s0w3rsnaysy-harfbuzz-2.8.0-dev/bin:/nix/store/cfbph0p4dsiq23psagf098cwsaq7s0f2-graphite2-1.3.14/bin:/nix/store/gr54jx66hcj3qviliym9as4xq2z00i8p-pango-1.48.4-bin/bin:/nix/store/7dk1rbgg0rpzf1kvi3s5pblisimjkp8d-wayland-1.19.0-bin/bin:/nix/store/psspl8przjwxpzkn7q0c5ggdn877jbi1-cups-2.3.3-dev/bin:/nix/store/r4l42q10l4lr9s1lkc9hh8pssyprk4np-cups-2.3.3/bin:/nix/store/fdjrhdgvhic14jg6llvm6vz2jvgnhfl6-gtk+3-3.24.27/bin:/nix/store/niw855nnjgqbq2s0iqxrk9xs5mr10rz8-gtk4-4.2.1-dev/bin:/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1/bin:/nix/store/jxrp8rx8kwxligp0zi5fdl44bgmf1d18-gobject-introspection-1.68.0-dev/bin:/nix/store/b8mzg1b1s3lh2zvmz1yichqprzhi0f2d-pkg-config-wrapper-0.29.2/bin:/nix/store/rr90kjj9hscb3hsp9n85b3rlgkx5cy0r-librsvg-2.50.5/bin:/nix/store/hiqm2sg34wrjb7i9h8ac666vnd8aa5gh-go-1.20.8/bin:/nix/store/3pfyf74sydyqgsslqcww8jvb5jkjph8g-gopls-0.6.10/bin:/nix/store/kgc4n50pzk2wv77lalnzgkws069ddghf-gotools-unstable-2021-01-13/bin:/nix/store/6nj30hx47qpqmjyvmhdqifljrks4hk3h-git-2.31.1/bin:/nix/store/3f1vfrc7p2kr8ciqhkfhfz5vhpfpsqpb-minitime/bin:/nix/store/gh3l7mkk8ddlmv4bm5xmzms6958q298w-generate/bin:/nix/store/969bnrdg6r7ssbxdk8qqcv1nwkaq05jm-build/bin:/nix/store/fz2wxkv4b7xgkryvzd6qihs48qch159g-patchelf-x86_64/bin:/nix/store/icrgmqm23dphvwi634ag4kgflf93bkdg-patchelf-aarch64/bin:/nix/store/0vkw1m51q34dr64z5i87dy99an4hfmyg-coreutils-8.32/bin:/nix/store/j1pkn9109012wwi992xnfj53razgbdvm-findutils-4.7.0/bin:/nix/store/frf2p5qmgs88f3c77j3zs92rpylxh84w-diffutils-3.7/bin:/nix/store/s7crpcbda751bx87jyrf989ln8l6vbg3-gnused-4.8/bin:/nix/store/0i6vphc3vnr8mg0gxjr61564hnp0s2md-gnugrep-3.6/bin:/nix/store/yihw9g7f4b1qcvblj3kr03jfy1nj3kq1-gawk-5.1.0/bin:/nix/store/rc34ffh62g42vavbsiw5aididd1dmwl4-gnutar-1.34/bin:/nix/store/9hxb506q8285gckhdacr72qx3zlkxrl6-gzip-1.10/bin:/nix/store/wqgk4p3hch2mz8yl7giy4dm0yk3n89gf-bzip2-1.0.6.0.2-bin/bin:/nix/store/g2fna66r9m081w1h1zj857j06jigx6cq-gnumake-4.3/bin:/nix/store/a4yw1svqqk4d8lhwinn9xp847zz9gfma-bash-4.4-p23/bin:/nix/store/8gglmz7sf4l587n38vh3z7y8h8lflaa3-patch-2.7.6/bin:/nix/store/4h03bnxv1c21yzl4vff0z8h2gh55k07y-xz-5.2.5-bin/bin'
export PATH
PKG_CONFIG_FOR_TARGET='pkg-config'
export PKG_CONFIG_FOR_TARGET
PKG_CONFIG_PATH_FOR_TARGET='/nix/store/x26skdnbygrryb189ghkk00f419vy9ci-atk-2.36.0-dev/lib/pkgconfig:/nix/store/d9zs9xg86lhqjqni0v8h2ibdrjb57fn4-glib-2.68.2-dev/lib/pkgconfig:/nix/store/qs5v2ykrd37qda7fzadi7sg7sa2ji1rs-zlib-1.2.11-dev/lib/pkgconfig:/nix/store/flgjhqip0r085k5682v55l57znfprdsr-libffi-3.3-dev/lib/pkgconfig:/nix/store/vsk1qc1na4izgz461vxkvn655yvarfr7-gtk+3-3.24.27-dev/lib/pkgconfig:/nix/store/jzv4fi6lg44yan8hhnlaxq3zhd6n4vg4-at-spi2-atk-2.38.0/lib/pkgconfig:/nix/store/gp87jysb40b919z8s7ixcilwdsiyl0rp-cairo-1.16.0-dev/lib/pkgconfig:/nix/store/lwblrig5nar7ymz3dkvjrffsyihcwpxd-fontconfig-2.13.92-dev/lib/pkgconfig:/nix/store/l7sxzcqbxbgcvrra9lz4ndm6zzlpbdhx-freetype-2.10.4-dev/lib/pkgconfig:/nix/store/n799f218s2r8rmi16nprj7gcal8ndfj8-bzip2-1.0.6.0.2-dev/lib/pkgconfig:/nix/store/7jr6g5qmxf7ygiyxjh1iwqbx88gp6qyz-libpng-apng-1.6.37-dev/lib/pkgconfig:/nix/store/x5kjng6iha7kcdm3p12fxfvzg09wizwc-expat-2.2.10-dev/lib/pkgconfig:/nix/store/iqwkmj5fn9694mbdqlvah0dh8xcajr93-pixman-0.38.4/lib/pkgconfig:/nix/store/lrmrlhzb4iqqs81knxaql9xdibg0zgf4-libXext-1.3.4-dev/lib/pkgconfig:/nix/store/a9yrg6p2jfy5cwxv08m9ghhjv6494cqf-xorgproto-2021.3/share/pkgconfig:/nix/store/4pzyc0mgdh7jj14skn4s39jph36wjk17-libXau-1.0.9-dev/lib/pkgconfig:/nix/store/6rjb1swigcr2ddhkws0xm9ymcd6hnlxg-libXrender-0.9.10-dev/lib/pkgconfig:/nix/store/igwzj9zcrfwnvaiw4drzv17ahkap48r9-libX11-1.7.0-dev/lib/pkgconfig:/nix/store/8lki9k45xcflvpx1xn823syiwl5i9zm1-libxcb-1.14-dev/lib/pkgconfig:/nix/store/qs9bwvn94w9d8d347hd7wxvfh6k1n8pk-xcb-util-0.4.0-dev/lib/pkgconfig:/nix/store/svrdwmniwpgl0lpm1zlqawgvmk3fa8wq-libGL-1.3.3-dev/lib/pkgconfig:/nix/store/l0h4hfzyy3q6klvxh6g7i58clgrc2m4i-libglvnd-1.3.3-dev/lib/pkgconfig:/nix/store/xr0fii2pg2iqlnszl7sz7y7z78065rqx-fribidi-1.0.10/lib/pkgconfig:/nix/store/qxak159dp4qrmvsck3kjkin4bszbr6ab-gdk-pixbuf-2.42.6-dev/lib/pkgconfig:/nix/store/sbs9ldcbkn895qxcw85bggvzplisd4fy-libtiff-4.2.0-dev/lib/pkgconfig:/nix/store/7rijhsnn683cvfwijs8jhhihglvpflq4-libjpeg-turbo-2.0.6-dev/lib/pkgconfig:/nix/store/jjyxxm3p18cz5cjz9j58rhw05xy2283v-xz-5.2.5-dev/lib/pkgconfig:/nix/store/2bqip8j6v2hxpafpsaahfdq851i01nan-gsettings-desktop-schemas-40.0/share/pkgconfig:/nix/store/kw9nw48nh883hqy4d49mvagz3ha2v69q-libICE-1.0.10-dev/lib/pkgconfig:/nix/store/pgwabcc67rrx91in49xxxwg1v2q3xfcg-libSM-1.2.3-dev/lib/pkgconfig:/nix/store/0v3kckadnj5hrl8hfyc808kmdnq0hkp6-libXcomposite-0.4.5-dev/lib/pkgconfig:/nix/store/126x64p3j7rxkx1rmyb21dqm6x25091a-libXfixes-5.0.3-dev/lib/pkgconfig:/nix/store/9wvsyx10kfkx9s7vv7ys56svs490dy8s-libXcursor-1.2.0-dev/lib/pkgconfig:/nix/store/ww202c7vbsxg3vmla6f31lf8fyd9vgjr-libXi-1.7.10-dev/lib/pkgconfig:/nix/store/wv8145lrnz3r205cqg7bjyw9297yrvrx-libXrandr-1.5.2-dev/lib/pkgconfig:/nix/store/c52730cidby7p2qwwq8cf91anqrni6lg-pango-1.48.4-dev/lib/pkgconfig:/nix/store/1b2ahzbjq1fqnm7riz1a9s0w3rsnaysy-harfbuzz-2.8.0-dev/lib/pkgconfig:/nix/store/cfbph0p4dsiq23psagf098cwsaq7s0f2-graphite2-1.3.14/lib/pkgconfig:/nix/store/cb2q689wanznfwxl9q01jcjrv9k8ysms-libXft-2.3.3-dev/lib/pkgconfig:/nix/store/9zrf8sw86f8pc7vls1xhw0lhngxhp125-wayland-1.19.0-dev/lib/pkgconfig:/nix/store/7dk1rbgg0rpzf1kvi3s5pblisimjkp8d-wayland-1.19.0-bin/lib/pkgconfig:/nix/store/203gv1j4515p8h1v0mimfyvsgbsmd800-wayland-protocols-1.21/share/pkgconfig:/nix/store/ii345i1r2n4lhcqb9ny55l6mslrn4z7w-libXinerama-1.1.4-dev/lib/pkgconfig:/nix/store/xa30jvsf2qnwks32y2hdm5qn57spyhh6-gmp-6.2.1-dev/lib/pkgconfig:/nix/store/niw855nnjgqbq2s0iqxrk9xs5mr10rz8-gtk4-4.2.1-dev/lib/pkgconfig:/nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6/lib/pkgconfig:/nix/store/9fvd1zhiib1czf17z8i5scs082cc50lc-vulkan-loader-1.2.162.0-dev/lib/pkgconfig:/nix/store/jxrp8rx8kwxligp0zi5fdl44bgmf1d18-gobject-introspection-1.68.0-dev/lib/pkgconfig:/nix/store/yzb5ppdqld4jahpazbk4mhfi72fp2skd-librsvg-2.50.5-dev/lib/pkgconfig'
export PKG_CONFIG_PATH_FOR_TARGET
PS4='+ '
RANLIB='ranlib'
export RANLIB
READELF='readelf'
export READELF
SIZE='size'
export SIZE
SOURCE_DATE_EPOCH='315532800'
export SOURCE_DATE_EPOCH
STRINGS='strings'
export STRINGS
STRIP='strip'
export STRIP
XDG_DATA_DIRS='/nix/store/nn70k5w99m6y59ldxlnb1x6j4q8bbjbq-patchelf-0.12/share:/nix/store/x26skdnbygrryb189ghkk00f419vy9ci-atk-2.36.0-dev/share:/nix/store/vsk1qc1na4izgz461vxkvn655yvarfr7-gtk+3-3.24.27-dev/share:/nix/store/qxak159dp4qrmvsck3kjkin4bszbr6ab-gdk-pixbuf-2.42.6-dev/share:/nix/store/2bqip8j6v2hxpafpsaahfdq851i01nan-gsettings-desktop-schemas-40.0/share:/nix/store/c52730cidby7p2qwwq8cf91anqrni6lg-pango-1.48.4-dev/share:/nix/store/1b2ahzbjq1fqnm7riz1a9s0w3rsnaysy-harfbuzz-2.8.0-dev/share:/nix/store/niw855nnjgqbq2s0iqxrk9xs5mr10rz8-gtk4-4.2.1-dev/share:/nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6/share:/nix/store/jxrp8rx8kwxligp0zi5fdl44bgmf1d18-gobject-introspection-1.68.0-dev/share:/nix/store/yzb5ppdqld4jahpazbk4mhfi72fp2skd-librsvg-2.50.5-dev/share'
export XDG_DATA_DIRS
buildInputs='/nix/store/x26skdnbygrryb189ghkk00f419vy9ci-atk-2.36.0-dev /nix/store/vsk1qc1na4izgz461vxkvn655yvarfr7-gtk+3-3.24.27-dev /nix/store/niw855nnjgqbq2s0iqxrk9xs5mr10rz8-gtk4-4.2.1-dev /nix/store/d9zs9xg86lhqjqni0v8h2ibdrjb57fn4-glib-2.68.2-dev /nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6 /nix/store/qxak159dp4qrmvsck3kjkin4bszbr6ab-gdk-pixbuf-2.42.6-dev /nix/store/jxrp8rx8kwxligp0zi5fdl44bgmf1d18-gobject-introspection-1.68.0-dev /nix/store/b8mzg1b1s3lh2zvmz1yichqprzhi0f2d-pkg-config-wrapper-0.29.2 /nix/store/yzb5ppdqld4jahpazbk4mhfi72fp2skd-librsvg-2.50.5-dev /nix/store/bvyvmmvg0a4sw3xnx8pwc99x1sn7739l-gtk4-4.2.1-debug /nix/store/mdzlc2h9vv5g6zv98rzlj4srqzqxc425-glib-2.68.2-debug /nix/store/hiqm2sg34wrjb7i9h8ac666vnd8aa5gh-go-1.20.8 /nix/store/3pfyf74sydyqgsslqcww8jvb5jkjph8g-gopls-0.6.10 /nix/store/kgc4n50pzk2wv77lalnzgkws069ddghf-gotools-unstable-2021-01-13 /nix/store/6nj30hx47qpqmjyvmhdqifljrks4hk3h-git-2.31.1 /nix/store/3f1vfrc7p2kr8ciqhkfhfz5vhpfpsqpb-minitime /nix/store/gh3l7mkk8ddlmv4bm5xmzms6958q298w-generate /nix/store/969bnrdg6r7ssbxdk8qqcv1nwkaq05jm-build /nix/store/fz2wxkv4b7xgkryvzd6qihs48qch159g-patchelf-x86_64 /nix/store/icrgmqm23dphvwi634ag4kgflf93bkdg-patchelf-aarch64'
export buildInputs
builder='/nix/store/a4yw1svqqk4d8lhwinn9xp847zz9gfma-bash-4.4-p23/bin/bash'
export builder
commonStripFlags='--enable-deterministic-archives'
configureFlags=''
export configureFlags
defaultBuildInputs=''
defaultNativeBuildInputs='/nix/store/nn70k5w99m6y59ldxlnb1x6j4q8bbjbq-patchelf-0.12 /nix/store/mjjy30kxz775bhhi6j9phw81qh6dsbrf-move-docs.sh /nix/store/kxw6q8v6isaqjm702d71n2421cxamq68-make-symlinks-relative.sh /nix/store/cl3qd985p1yxyfkj96v0hqxiy3w69xq5-compress-man-pages.sh /nix/store/h54dzwd7rdh2jlcv91424csl6d0ccgjy-strip.sh /nix/store/bnj8d7mvbkg3vdb07yz74yhl3g107qq5-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/8zxndz5ag0p6s526c2xyllhk1nrn4c3i-audit-tmpdir.sh /nix/store/c8n9kcdddp9np665xz6ri61b383nxvz8-move-systemd-user-units.sh /nix/store/1i5y55x4b4m9qkx5dqbmr1r6bvrqbanw-multiple-outputs.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh /nix/store/pr6nzbscdpg94yvr151lrif2kg0csx7b-reproducible-builds.sh /nix/store/35pnk5kwi26m3ph2bc7dxwjnavpzl8cn-gcc-wrapper-10.3.0'
depsBuildBuild=''
export depsBuildBuild
depsBuildBuildPropagated=''
export depsBuildBuildPropagated
depsBuildTarget=''
export depsBuildTarget
depsBuildTargetPropagated=''
export depsBuildTargetPropagated
depsHostHost=''
export depsHostHost
depsHostHostPropagated=''
export depsHostHostPropagated
depsTargetTarget=''
export depsTargetTarget
depsTargetTargetPropagated=''
export depsTargetTargetPropagated
doCheck=''
export doCheck
doInstallCheck=''
export doInstallCheck
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
declare -a envBuildBuildHooks=()
declare -a envBuildHostHooks=()
declare -a envBuildTargetHooks=()
declare -a envHostHostHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' 'gettextDataDirsHook' 'make_gobject_introspection_find_gir_files' )
declare -a envHostTargetHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' 'gettextDataDirsHook' 'make_gobject_introspection_find_gir_files' )
declare -a envTargetTargetHooks=('make_glib_find_gsettings_schemas' 'findGdkPixbufLoaders' 'pkgConfigWrapper_addPkgConfigPath' )
declare -a fixupOutputHooks=('if [ -z "${dontPatchELF-}" ]; then patchELF "$prefix"; fi' '_makeSymlinksRelative' 'if [ -z "${dontGzipMan-}" ]; then compressManPages "$prefix"; fi' '_doStrip' 'patchShebangsAuto' '_pruneLibtoolFiles' 'if [[ -z "${noAuditTmpdir-}" && -e "$prefix" ]]; then auditTmpdir "$prefix"; fi' '_moveSystemdUserUnits' '_moveSbin' '_moveLib64' '_gtkCleanImmodulesCache' '_gtkCleanImmodulesCache' )
initialPath='/nix/store/0vkw1m51q34dr64z5i87dy99an4hfmyg-coreutils-8.32 /nix/store/j1pkn9109012wwi992xnfj53razgbdvm-findutils-4.7.0 /nix/store/frf2p5qmgs88f3c77j3zs92rpylxh84w-diffutils-3.7 /nix/store/s7crpcbda751bx87jyrf989ln8l6vbg3-gnused-4.8 /nix/store/0i6vphc3vnr8mg0gxjr61564hnp0s2md-gnugrep-3.6 /nix/store/yihw9g7f4b1qcvblj3kr03jfy1nj3kq1-gawk-5.1.0 /nix/store/rc34ffh62g42vavbsiw5aididd1dmwl4-gnutar-1.34 /nix/store/9hxb506q8285gckhdacr72qx3zlkxrl6-gzip-1.10 /nix/store/wqgk4p3hch2mz8yl7giy4dm0yk3n89gf-bzip2-1.0.6.0.2-bin /nix/store/g2fna66r9m081w1h1zj857j06jigx6cq-gnumake-4.3 /nix/store/a4yw1svqqk4d8lhwinn9xp847zz9gfma-bash-4.4-p23 /nix/store/8gglmz7sf4l587n38vh3z7y8h8lflaa3-patch-2.7.6 /nix/store/4h03bnxv1c21yzl4vff0z8h2gh55k07y-xz-5.2.5-bin'
maybe_dir='/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1/share/gsettings-schemas/gtk4-4.2.1'
name='gotk4-nix-shell-env'
export name
nativeBuildInputs=''
export nativeBuildInputs
nobuildPhase='echo
echo "This derivation is not meant to be built, aborting";
echo
exit 1
'
export nobuildPhase
out='/home/edjubert/workspace/hyprland-share-picker-gtk/outputs/out'
export out
outputBin='out'
outputDev='out'
outputDevdoc='REMOVE'
outputDevman='out'
outputDoc='out'
outputInclude='out'
outputInfo='out'
outputLib='out'
outputMan='out'
outputs='out'
export outputs
patches=''
export patches
phases='nobuildPhase'
export phases
pkg='/nix/store/35pnk5kwi26m3ph2bc7dxwjnavpzl8cn-gcc-wrapper-10.3.0'
declare -a pkgsBuildBuild=()
declare -a pkgsBuildHost=('/nix/store/nn70k5w99m6y59ldxlnb1x6j4q8bbjbq-patchelf-0.12' '/nix/store/mjjy30kxz775bhhi6j9phw81qh6dsbrf-move-docs.sh' '/nix/store/kxw6q8v6isaqjm702d71n2421cxamq68-make-symlinks-relative.sh' '/nix/store/cl3qd985p1yxyfkj96v0hqxiy3w69xq5-compress-man-pages.sh' '/nix/store/h54dzwd7rdh2jlcv91424csl6d0ccgjy-strip.sh' '/nix/store/bnj8d7mvbkg3vdb07yz74yhl3g107qq5-patch-shebangs.sh' '/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh' '/nix/store/8zxndz5ag0p6s526c2xyllhk1nrn4c3i-audit-tmpdir.sh' '/nix/store/c8n9kcdddp9np665xz6ri61b383nxvz8-move-systemd-user-units.sh' '/nix/store/1i5y55x4b4m9qkx5dqbmr1r6bvrqbanw-multiple-outputs.sh' '/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh' '/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh' '/nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh' '/nix/store/pr6nzbscdpg94yvr151lrif2kg0csx7b-reproducible-builds.sh' '/nix/store/35pnk5kwi26m3ph2bc7dxwjnavpzl8cn-gcc-wrapper-10.3.0' '/nix/store/pd21dgf1vdpxbfx7ilbwb8hs9l3wd6xd-binutils-wrapper-2.35.1' )
declare -a pkgsBuildTarget=()
declare -a pkgsHostHost=()
declare -a pkgsHostTarget=('/nix/store/x26skdnbygrryb189ghkk00f419vy9ci-atk-2.36.0-dev' '/nix/store/d9zs9xg86lhqjqni0v8h2ibdrjb57fn4-glib-2.68.2-dev' '/nix/store/qs5v2ykrd37qda7fzadi7sg7sa2ji1rs-zlib-1.2.11-dev' '/nix/store/65ys3k6gn2s27apky0a0la7wryg3az9q-zlib-1.2.11' '/nix/store/flgjhqip0r085k5682v55l57znfprdsr-libffi-3.3-dev' '/nix/store/0d71ygfwbmy1xjlbj1v027dfmy9cqavy-libffi-3.3' '/nix/store/rs4ijdr8xqpy9cii27576y6kwcvd7gn6-gettext-0.21' '/nix/store/7wlmpzdj1rpkhalacar5c0qdkmfr65ap-glibc-iconv-2.32' '/nix/store/vm72kab463p1ln9amf8z3gm55nsgysn0-glib-2.68.2-bin' '/nix/store/dcb3cyba5wl6qimv6vwdpbi0kg0g1nlb-glib-2.68.2' '/nix/store/qdc7f6wraiwlz2sxbfqn70s81b1788mz-atk-2.36.0' '/nix/store/vsk1qc1na4izgz461vxkvn655yvarfr7-gtk+3-3.24.27-dev' '/nix/store/jzv4fi6lg44yan8hhnlaxq3zhd6n4vg4-at-spi2-atk-2.38.0' '/nix/store/x26skdnbygrryb189ghkk00f419vy9ci-atk-2.36.0-dev' '/nix/store/gp87jysb40b919z8s7ixcilwdsiyl0rp-cairo-1.16.0-dev' '/nix/store/lwblrig5nar7ymz3dkvjrffsyihcwpxd-fontconfig-2.13.92-dev' '/nix/store/l7sxzcqbxbgcvrra9lz4ndm6zzlpbdhx-freetype-2.10.4-dev' '/nix/store/n799f218s2r8rmi16nprj7gcal8ndfj8-bzip2-1.0.6.0.2-dev' '/nix/store/wqgk4p3hch2mz8yl7giy4dm0yk3n89gf-bzip2-1.0.6.0.2-bin' '/nix/store/5ymjz97754jc6alp50cq1i3iv0jbg8b2-bzip2-1.0.6.0.2' '/nix/store/7jr6g5qmxf7ygiyxjh1iwqbx88gp6qyz-libpng-apng-1.6.37-dev' '/nix/store/wrii6pcbfa17c976pnvbiclyndg2g0qy-libpng-apng-1.6.37' '/nix/store/522y9xzwgvx16q6grwx25s4lyiizxvkk-freetype-2.10.4' '/nix/store/bifnxz3cmryik3g1wrcjaz89q1yxm8gx-fontconfig-2.13.92-bin' '/nix/store/9wcp4vp7s3nd5y9rzz9m7a7da45h2f8p-fontconfig-2.13.92-lib' '/nix/store/x5kjng6iha7kcdm3p12fxfvzg09wizwc-expat-2.2.10-dev' '/nix/store/nlqz3916vfh4fqwbnky1l5bf02n876y5-expat-2.2.10' '/nix/store/iqwkmj5fn9694mbdqlvah0dh8xcajr93-pixman-0.38.4' '/nix/store/lrmrlhzb4iqqs81knxaql9xdibg0zgf4-libXext-1.3.4-dev' '/nix/store/a9yrg6p2jfy5cwxv08m9ghhjv6494cqf-xorgproto-2021.3' '/nix/store/4pzyc0mgdh7jj14skn4s39jph36wjk17-libXau-1.0.9-dev' '/nix/store/77cvsy1r2ks5w7s5hfgcgks16w4c4bfr-libXau-1.0.9' '/nix/store/xas0isszbd8wbswfc9vigfnz29qvbhzx-libXext-1.3.4' '/nix/store/6rjb1swigcr2ddhkws0xm9ymcd6hnlxg-libXrender-0.9.10-dev' '/nix/store/igwzj9zcrfwnvaiw4drzv17ahkap48r9-libX11-1.7.0-dev' '/nix/store/8lki9k45xcflvpx1xn823syiwl5i9zm1-libxcb-1.14-dev' '/nix/store/l2lkchcq0kwn56wqzls9vrgg22608vfk-libxcb-1.14' '/nix/store/j1ah55qaqg5cfsg21y5ai55gdblkxh9c-libX11-1.7.0' '/nix/store/il08jyg29dn3whmprp59rcriq4bsi4xr-libXrender-0.9.10' '/nix/store/qs9bwvn94w9d8d347hd7wxvfh6k1n8pk-xcb-util-0.4.0-dev' '/nix/store/1ypsww11c48xklnkr42shnvypnsr16sf-xcb-util-0.4.0' '/nix/store/svrdwmniwpgl0lpm1zlqawgvmk3fa8wq-libGL-1.3.3-dev' '/nix/store/iajdz6qbwvibw3w8vrkbjhrsnjvhpv2p-libGL-1.3.3' '/nix/store/hpnazqkp4zbm2pkp1xj4whmld2zhwv0r-libglvnd-1.3.3' '/nix/store/l0h4hfzyy3q6klvxh6g7i58clgrc2m4i-libglvnd-1.3.3-dev' '/nix/store/hzm5l793pisnacn6jd9d3akk6hlz4c5l-cairo-1.16.0' '/nix/store/xr0fii2pg2iqlnszl7sz7y7z78065rqx-fribidi-1.0.10' '/nix/store/qxak159dp4qrmvsck3kjkin4bszbr6ab-gdk-pixbuf-2.42.6-dev' '/nix/store/sbs9ldcbkn895qxcw85bggvzplisd4fy-libtiff-4.2.0-dev' '/nix/store/7rijhsnn683cvfwijs8jhhihglvpflq4-libjpeg-turbo-2.0.6-dev' '/nix/store/9bvh505ip18m827nzdspn5xv7cba55dr-libjpeg-turbo-2.0.6-bin' '/nix/store/0byg8crnnyg1wki90c9r9ffcv423q5f4-libjpeg-turbo-2.0.6' '/nix/store/jjyxxm3p18cz5cjz9j58rhw05xy2283v-xz-5.2.5-dev' '/nix/store/4h03bnxv1c21yzl4vff0z8h2gh55k07y-xz-5.2.5-bin' '/nix/store/rdslqn6gj1a27laa1xcn0hm147v5an7z-xz-5.2.5' '/nix/store/ckasl98a4564zf7m3kya2sj9vgmczxns-libtiff-4.2.0-bin' '/nix/store/i77zlj776n76gccg50m43zaiinsspvrc-libtiff-4.2.0' '/nix/store/z5qhhrkms8aivbj6z20gx0n2fyga3b9y-gdk-pixbuf-2.42.6' '/nix/store/2bqip8j6v2hxpafpsaahfdq851i01nan-gsettings-desktop-schemas-40.0' '/nix/store/kw9nw48nh883hqy4d49mvagz3ha2v69q-libICE-1.0.10-dev' '/nix/store/mm1ian83sd3j7k0a6sqa8fz8zjx7b4ad-libICE-1.0.10' '/nix/store/pgwabcc67rrx91in49xxxwg1v2q3xfcg-libSM-1.2.3-dev' '/nix/store/0847w9k5272l4250n1qbbhnln4l8dpgz-libSM-1.2.3' '/nix/store/0v3kckadnj5hrl8hfyc808kmdnq0hkp6-libXcomposite-0.4.5-dev' '/nix/store/126x64p3j7rxkx1rmyb21dqm6x25091a-libXfixes-5.0.3-dev' '/nix/store/0fyyj82hswq1zp93jgljf8gbijk7qn2c-libXfixes-5.0.3' '/nix/store/h82a1nhyilcx1fdfky11hc0csvayqjjj-libXcomposite-0.4.5' '/nix/store/9wvsyx10kfkx9s7vv7ys56svs490dy8s-libXcursor-1.2.0-dev' '/nix/store/v27v33b48amcd4g9i025kbivsa05w9gg-libXcursor-1.2.0' '/nix/store/ww202c7vbsxg3vmla6f31lf8fyd9vgjr-libXi-1.7.10-dev' '/nix/store/ap3z1askgsslhzgwsbqkm26ki8dmfjsb-libXi-1.7.10' '/nix/store/wv8145lrnz3r205cqg7bjyw9297yrvrx-libXrandr-1.5.2-dev' '/nix/store/8cxr4l160pqhyvszahmw9fbc63dzw8l9-libXrandr-1.5.2' '/nix/store/c52730cidby7p2qwwq8cf91anqrni6lg-pango-1.48.4-dev' '/nix/store/1b2ahzbjq1fqnm7riz1a9s0w3rsnaysy-harfbuzz-2.8.0-dev' '/nix/store/cfbph0p4dsiq23psagf098cwsaq7s0f2-graphite2-1.3.14' '/nix/store/yjlx3r00yshl6z8r8xdc008mmh7z13s9-harfbuzz-2.8.0' '/nix/store/cb2q689wanznfwxl9q01jcjrv9k8ysms-libXft-2.3.3-dev' '/nix/store/p4kbp56zpk65s7i30x8glphh3k5h9wgr-libXft-2.3.3' '/nix/store/gr54jx66hcj3qviliym9as4xq2z00i8p-pango-1.48.4-bin' '/nix/store/5hg65f2mcc10akh1m3ap7ficws1cs5r0-pango-1.48.4' '/nix/store/9zrf8sw86f8pc7vls1xhw0lhngxhp125-wayland-1.19.0-dev' '/nix/store/7dk1rbgg0rpzf1kvi3s5pblisimjkp8d-wayland-1.19.0-bin' '/nix/store/pjxkg635vj6kv71chjc7x88mzrifdqly-wayland-1.19.0' '/nix/store/203gv1j4515p8h1v0mimfyvsgbsmd800-wayland-protocols-1.21' '/nix/store/ii345i1r2n4lhcqb9ny55l6mslrn4z7w-libXinerama-1.1.4-dev' '/nix/store/1kn2z5frxza3jz19yav09vlzzk7zpk1p-libXinerama-1.1.4' '/nix/store/psspl8przjwxpzkn7q0c5ggdn877jbi1-cups-2.3.3-dev' '/nix/store/xa30jvsf2qnwks32y2hdm5qn57spyhh6-gmp-6.2.1-dev' '/nix/store/lqwgi0in94ll5fwsbh8ligvn8l0vqn7v-gmp-6.2.1' '/nix/store/slvjvi2f8c9y657iy546yri9k32vp107-cups-2.3.3-lib' '/nix/store/r4l42q10l4lr9s1lkc9hh8pssyprk4np-cups-2.3.3' '/nix/store/fdjrhdgvhic14jg6llvm6vz2jvgnhfl6-gtk+3-3.24.27' '/nix/store/niw855nnjgqbq2s0iqxrk9xs5mr10rz8-gtk4-4.2.1-dev' '/nix/store/i3dr9h6kf1r0hx7i79bh2zn5954kmhk7-graphene-1.10.6' '/nix/store/9fvd1zhiib1czf17z8i5scs082cc50lc-vulkan-loader-1.2.162.0-dev' '/nix/store/s1zssr1p8877nnd1ysxz6f3c4d7rlz18-vulkan-loader-1.2.162.0' '/nix/store/84hwx702mm4w2g4d91cdxwqm4902fr8k-gtk4-4.2.1' '/nix/store/jxrp8rx8kwxligp0zi5fdl44bgmf1d18-gobject-introspection-1.68.0-dev' '/nix/store/95x3ix0h0qn44b52md5qdgrqjwzhg48l-gobject-introspection-1.68.0' '/nix/store/b8mzg1b1s3lh2zvmz1yichqprzhi0f2d-pkg-config-wrapper-0.29.2' '/nix/store/yzb5ppdqld4jahpazbk4mhfi72fp2skd-librsvg-2.50.5-dev' '/nix/store/rr90kjj9hscb3hsp9n85b3rlgkx5cy0r-librsvg-2.50.5' '/nix/store/bvyvmmvg0a4sw3xnx8pwc99x1sn7739l-gtk4-4.2.1-debug' '/nix/store/mdzlc2h9vv5g6zv98rzlj4srqzqxc425-glib-2.68.2-debug' '/nix/store/hiqm2sg34wrjb7i9h8ac666vnd8aa5gh-go-1.20.8' '/nix/store/3pfyf74sydyqgsslqcww8jvb5jkjph8g-gopls-0.6.10' '/nix/store/kgc4n50pzk2wv77lalnzgkws069ddghf-gotools-unstable-2021-01-13' '/nix/store/6nj30hx47qpqmjyvmhdqifljrks4hk3h-git-2.31.1' '/nix/store/3f1vfrc7p2kr8ciqhkfhfz5vhpfpsqpb-minitime' '/nix/store/gh3l7mkk8ddlmv4bm5xmzms6958q298w-generate' '/nix/store/969bnrdg6r7ssbxdk8qqcv1nwkaq05jm-build' '/nix/store/fz2wxkv4b7xgkryvzd6qihs48qch159g-patchelf-x86_64' '/nix/store/icrgmqm23dphvwi634ag4kgflf93bkdg-patchelf-aarch64' )
declare -a pkgsTargetTarget=()
declare -a postFixupHooks=('_multioutPropagateDev' )
declare -a postUnpackHooks=('_updateSourceDateEpochFromSourceRoot' )
declare -a preConfigureHooks=('_multioutConfig' )
declare -a preFixupHooks=('_moveToShare' '_multioutDocs' '_multioutDevs' '_multioutMoveGlibGir' )
preFixupPhases=' glibPreFixupPhase dropIconThemeCache dropIconThemeCache giDiscoverSelf'
preInstallPhases=' glibPreInstallPhase'
prefix='/home/edjubert/workspace/hyprland-share-picker-gtk/outputs/out'
declare -a propagatedBuildDepFiles=('propagated-build-build-deps' 'propagated-native-build-inputs' 'propagated-build-target-deps' )
propagatedBuildInputs=''
export propagatedBuildInputs
declare -a propagatedHostDepFiles=('propagated-host-host-deps' 'propagated-build-inputs' )
propagatedNativeBuildInputs=''
export propagatedNativeBuildInputs
declare -a propagatedTargetDepFiles=('propagated-target-target-deps' )
role_post=''
shell='/nix/store/a4yw1svqqk4d8lhwinn9xp847zz9gfma-bash-4.4-p23/bin/bash'
export shell
shellHook='		while read -r key value; do
			export $key=${!key}${!key:+:}$value
		done < /nix/store/p5ypj98hf3kb46v6aag64k1ccghj6sbg-gotk4-env
		export GDK_PIXBUF_MODULE_FILE='\''/nix/store/rr90kjj9hscb3hsp9n85b3rlgkx5cy0r-librsvg-2.50.5/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache'\''
		export XDG_DATA_DIRS=$XDG_DATA_DIRS:/nix/store/jjh2xy0l7dz2r4mnbmbwlz1232zqshn8-hicolor-icon-theme-0.17/share:/nix/store/4038a4lw7wy366jkcfxan7g064v96ja6-adwaita-icon-theme-40.1.1/share
		export XDG_DATA_DIRS=$XDG_DATA_DIRS:$GSETTINGS_SCHEMAS_PATH
	'
export shellHook
stdenv='/nix/store/qg8qhrxiab3r87xmaxbq565g1g8bnl57-stdenv-linux'
export stdenv
strictDeps=''
export strictDeps
system='x86_64-linux'
export system
declare -a unpackCmdHooks=('_defaultUnpack' )
_activatePkgs ()
{
 
    local -i hostOffset targetOffset;
    local pkg;
    for hostOffset in "${allPlatOffsets[@]}";
    do
        local pkgsVar="${pkgAccumVarVars[$hostOffset + 1]}";
        for targetOffset in "${allPlatOffsets[@]}";
        do
            (( "$hostOffset" <= "$targetOffset" )) || continue;
            local pkgsRef="${pkgsVar}[$targetOffset - $hostOffset]";
            local pkgsSlice="${!pkgsRef}[@]";
            for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
            do
                activatePackage "$pkg" "$hostOffset" "$targetOffset";
            done;
        done;
    done
}
_addRpathPrefix ()
{
 
    if [ "${NIX_NO_SELF_RPATH:-0}" != 1 ]; then
        export NIX_LDFLAGS="-rpath $1/lib ${NIX_LDFLAGS-}";
        if [ -n "${NIX_LIB64_IN_SELF_RPATH:-}" ]; then
            export NIX_LDFLAGS="-rpath $1/lib64 ${NIX_LDFLAGS-}";
        fi;
        if [ -n "${NIX_LIB32_IN_SELF_RPATH:-}" ]; then
            export NIX_LDFLAGS="-rpath $1/lib32 ${NIX_LDFLAGS-}";
        fi;
    fi
}
_addToEnv ()
{
 
    local -i depHostOffset depTargetOffset;
    local pkg;
    for depHostOffset in "${allPlatOffsets[@]}";
    do
        local hookVar="${pkgHookVarVars[$depHostOffset + 1]}";
        local pkgsVar="${pkgAccumVarVars[$depHostOffset + 1]}";
        for depTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$depHostOffset" <= "$depTargetOffset" )) || continue;
            local hookRef="${hookVar}[$depTargetOffset - $depHostOffset]";
            if [[ -z "${strictDeps-}" ]]; then
                local visitedPkgs="";
                for pkg in ${pkgsBuildBuild+"${pkgsBuildBuild[@]}"} ${pkgsBuildHost+"${pkgsBuildHost[@]}"} ${pkgsBuildTarget+"${pkgsBuildTarget[@]}"} ${pkgsHostHost+"${pkgsHostHost[@]}"} ${pkgsHostTarget+"${pkgsHostTarget[@]}"} ${pkgsTargetTarget+"${pkgsTargetTarget[@]}"};
                do
                    if [[ "$visitedPkgs" = *"$pkg"* ]]; then
                        continue;
                    fi;
                    runHook "${!hookRef}" "$pkg";
                    visitedPkgs+=" $pkg";
                done;
            else
                local pkgsRef="${pkgsVar}[$depTargetOffset - $depHostOffset]";
                local pkgsSlice="${!pkgsRef}[@]";
                for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
                do
                    runHook "${!hookRef}" "$pkg";
                done;
            fi;
        done;
    done
}
_allFlags ()
{
 
    for varName in $(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }');
    do
        if (( "${NIX_DEBUG:-0}" >= 1 )); then
            printf "@%s@ -> %q\n" "${varName}" "${!varName}";
        fi;
        args+=("--subst-var" "$varName");
    done
}
_assignFirst ()
{
 
    local varName="$1";
    local REMOVE=REMOVE;
    shift;
    while (( $# )); do
        if [ -n "${!1-}" ]; then
            eval "${varName}"="$1";
            return;
        fi;
        shift;
    done;
    echo "Error: _assignFirst found no valid variant!";
    return 1
}
_callImplicitHook ()
{
 
    local def="$1";
    local hookName="$2";
    if declare -F "$hookName" > /dev/null; then
        "$hookName";
    else
        if type -p "$hookName" > /dev/null; then
            source "$hookName";
        else
            if [ -n "${!hookName:-}" ]; then
                eval "${!hookName}";
            else
                return "$def";
            fi;
        fi;
    fi
}
_defaultUnpack ()
{
 
    local fn="$1";
    if [ -d "$fn" ]; then
        cp -pr --reflink=auto -- "$fn" "$(stripHash "$fn")";
    else
        case "$fn" in 
            *.tar.xz | *.tar.lzma | *.txz)
                xz -d < "$fn" | tar xf -
            ;;
            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)
                tar xf "$fn"
            ;;
            *)
                return 1
            ;;
        esac;
    fi
}
_doStrip ()
{
 
    local -ra flags=(dontStripHost dontStripTarget);
    local -ra stripCmds=(STRIP TARGET_STRIP);
    if [[ "${STRIP-}" == "${TARGET_STRIP-}" ]]; then
        dontStripTarget+=1;
    fi;
    local i;
    for i in ${!stripCmds[@]};
    do
        local -n flag="${flags[$i]}";
        local -n stripCmd="${stripCmds[$i]}";
        if [[ -n "${dontStrip-}" || -n "${flag-}" ]] || ! type -f "${stripCmd-}" 2> /dev/null; then
            continue;
        fi;
        stripDebugList=${stripDebugList:-lib lib32 lib64 libexec bin sbin};
        if [ -n "$stripDebugList" ]; then
            stripDirs "$stripCmd" "$stripDebugList" "${stripDebugFlags:--S}";
        fi;
        stripAllList=${stripAllList:-};
        if [ -n "$stripAllList" ]; then
            stripDirs "$stripCmd" "$stripAllList" "${stripAllFlags:--s}";
        fi;
    done
}
_eval ()
{
 
    if declare -F "$1" > /dev/null 2>&1; then
        "$@";
    else
        eval "$1";
    fi
}
_gtkCleanImmodulesCache ()
{
 
    local f="${prefix:?}/lib/gtk-4.0/4.0.0/immodules.cache";
    if [ -f "$f" ]; then
        sed 's|Created by .*bin/gtk-query-|Created by bin/gtk-query-|' -i "$f";
    fi
}
_makeSymlinksRelative ()
{
 
    local symlinkTarget;
    if [ -n "${dontRewriteSymlinks-}" ]; then
        return 0;
    fi;
    while IFS= read -r -d '' f; do
        symlinkTarget=$(readlink "$f");
        if [[ "$symlinkTarget"/ != "$prefix"/* ]]; then
            continue;
        fi;
        if [ ! -e "$symlinkTarget" ]; then
            echo "the symlink $f is broken, it points to $symlinkTarget (which is missing)";
        fi;
        echo "rewriting symlink $f to be relative to $prefix";
        ln -snrf "$symlinkTarget" "$f";
    done < <(find $prefix -type l -print0)
}
_moveLib64 ()
{
 
    if [ "${dontMoveLib64-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/lib64" -o -L "$prefix/lib64" ]; then
        return;
    fi;
    echo "moving $prefix/lib64/* to $prefix/lib";
    mkdir -p $prefix/lib;
    shopt -s dotglob;
    for i in $prefix/lib64/*;
    do
        mv --no-clobber "$i" $prefix/lib;
    done;
    shopt -u dotglob;
    rmdir $prefix/lib64;
    ln -s lib $prefix/lib64
}
_moveSbin ()
{
 
    if [ "${dontMoveSbin-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/sbin" -o -L "$prefix/sbin" ]; then
        return;
    fi;
    echo "moving $prefix/sbin/* to $prefix/bin";
    mkdir -p $prefix/bin;
    shopt -s dotglob;
    for i in $prefix/sbin/*;
    do
        mv "$i" $prefix/bin;
    done;
    shopt -u dotglob;
    rmdir $prefix/sbin;
    ln -s bin $prefix/sbin
}
_moveSystemdUserUnits ()
{
 
    if [ "${dontMoveSystemdUserUnits:-0}" = 1 ]; then
        return;
    fi;
    if [ ! -e "${prefix:?}/lib/systemd/user" ]; then
        return;
    fi;
    local source="$prefix/lib/systemd/user";
    local target="$prefix/share/systemd/user";
    echo "moving $source/* to $target";
    mkdir -p "$target";
    ( shopt -s dotglob;
    for i in "$source"/*;
    do
        mv "$i" "$target";
    done );
    rmdir "$source";
    ln -s "$target" "$source"
}
_moveToShare ()
{
 
    forceShare=${forceShare:=man doc info};
    if [ -z "$forceShare" -o -z "$out" ]; then
        return;
    fi;
    for d in $forceShare;
    do
        if [ -d "$out/$d" ]; then
            if [ -d "$out/share/$d" ]; then
                echo "both $d/ and share/$d/ exist!";
            else
                echo "moving $out/$d to $out/share/$d";
                mkdir -p $out/share;
                mv $out/$d $out/share/;
            fi;
        fi;
    done
}
_multioutConfig ()
{
 
    if [ "$outputs" = "out" ] || [ -z "${setOutputFlags-1}" ]; then
        return;
    fi;
    if [ -z "$shareDocName" ]; then
        local confScript="$configureScript";
        if [ -z "$confScript" ] && [ -x ./configure ]; then
            confScript=./configure;
        fi;
        if [ -f "$confScript" ]; then
            local shareDocName="$(sed -n "s/^PACKAGE_TARNAME='\(.*\)'$/\1/p" < "$confScript")";
        fi;
        if [ -z "$shareDocName" ] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_-]'; then
            shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
        fi;
    fi;
    configureFlags="        --bindir=${!outputBin}/bin --sbindir=${!outputBin}/sbin         --includedir=${!outputInclude}/include --oldincludedir=${!outputInclude}/include         --mandir=${!outputMan}/share/man --infodir=${!outputInfo}/share/info         --docdir=${!outputDoc}/share/doc/${shareDocName}         --libdir=${!outputLib}/lib --libexecdir=${!outputLib}/libexec         --localedir=${!outputLib}/share/locale         $configureFlags";
    installFlags="        pkgconfigdir=${!outputDev}/lib/pkgconfig         m4datadir=${!outputDev}/share/aclocal aclocaldir=${!outputDev}/share/aclocal         $installFlags"
}
_multioutDevs ()
{
 
    if [ "$outputs" = "out" ] || [ -z "${moveToDev-1}" ]; then
        return;
    fi;
    moveToOutput include "${!outputInclude}";
    moveToOutput lib/pkgconfig "${!outputDev}";
    moveToOutput share/pkgconfig "${!outputDev}";
    moveToOutput lib/cmake "${!outputDev}";
    moveToOutput share/aclocal "${!outputDev}";
    for f in "${!outputDev}"/{lib,share}/pkgconfig/*.pc;
    do
        echo "Patching '$f' includedir to output ${!outputInclude}";
        sed -i "/^includedir=/s,=\${prefix},=${!outputInclude}," "$f";
    done
}
_multioutDocs ()
{
 
    local REMOVE=REMOVE;
    moveToOutput share/info "${!outputInfo}";
    moveToOutput share/doc "${!outputDoc}";
    moveToOutput share/gtk-doc "${!outputDevdoc}";
    moveToOutput share/devhelp/books "${!outputDevdoc}";
    moveToOutput share/man "${!outputMan}";
    moveToOutput share/man/man3 "${!outputDevman}"
}
_multioutMoveGlibGir ()
{
 
    moveToOutput share/gir-1.0 "${!outputDev}"
}
_multioutPropagateDev ()
{
 
    if [ "$outputs" = "out" ]; then
        return;
    fi;
    local outputFirst;
    for outputFirst in $outputs;
    do
        break;
    done;
    local propagaterOutput="$outputDev";
    if [ -z "$propagaterOutput" ]; then
        propagaterOutput="$outputFirst";
    fi;
    if [ -z "${propagatedBuildOutputs+1}" ]; then
        local po_dirty="$outputBin $outputInclude $outputLib";
        set +o pipefail;
        propagatedBuildOutputs=`echo "$po_dirty"             | tr -s ' ' '\n' | grep -v -F "$propagaterOutput"             | sort -u | tr '\n' ' ' `;
        set -o pipefail;
    fi;
    if [ -z "$propagatedBuildOutputs" ]; then
        return;
    fi;
    mkdir -p "${!propagaterOutput}"/nix-support;
    for output in $propagatedBuildOutputs;
    do
        echo -n " ${!output}" >> "${!propagaterOutput}"/nix-support/propagated-build-inputs;
    done
}
_overrideFirst ()
{
 
    if [ -z "${!1-}" ]; then
        _assignFirst "$@";
    fi
}
_pruneLibtoolFiles ()
{
 
    if [ "${dontPruneLibtoolFiles-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    find "$prefix" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \; -exec grep -q "^old_library=''" {} \; -exec sed -i {} -e "/^dependency_libs='[^']/ c dependency_libs='' #pruned" \;
}
_updateSourceDateEpochFromSourceRoot ()
{
 
    if [ -n "$sourceRoot" ]; then
        updateSourceDateEpoch "$sourceRoot";
    fi
}
activatePackage ()
{
 
    local pkg="$1";
    local -ri hostOffset="$2";
    local -ri targetOffset="$3";
    (( "$hostOffset" <= "$targetOffset" )) || exit -1;
    if [ -f "$pkg" ]; then
        source "$pkg";
    fi;
    if [[ -z "${strictDeps-}" || "$hostOffset" -le -1 ]]; then
        addToSearchPath _PATH "$pkg/bin";
    fi;
    if [[ "$hostOffset" -le -1 ]]; then
        addToSearchPath _XDG_DATA_DIRS "$pkg/share";
    fi;
    if [[ "$hostOffset" -eq 0 && -d "$pkg/bin" ]]; then
        addToSearchPath _HOST_PATH "$pkg/bin";
    fi;
    if [[ -f "$pkg/nix-support/setup-hook" ]]; then
        source "$pkg/nix-support/setup-hook";
    fi
}
addEnvHooks ()
{
 
    local depHostOffset="$1";
    shift;
    local pkgHookVarsSlice="${pkgHookVarVars[$depHostOffset + 1]}[@]";
    local pkgHookVar;
    for pkgHookVar in "${!pkgHookVarsSlice}";
    do
        eval "${pkgHookVar}s"'+=("$@")';
    done
}
addToSearchPath ()
{
 
    addToSearchPathWithCustomDelimiter ":" "$@"
}
addToSearchPathWithCustomDelimiter ()
{
 
    local delimiter="$1";
    local varName="$2";
    local dir="$3";
    if [[ -d "$dir" && "${!varName:+${delimiter}${!varName}${delimiter}}" != *"${delimiter}${dir}${delimiter}"* ]]; then
        export "${varName}=${!varName:+${!varName}${delimiter}}${dir}";
    fi
}
auditTmpdir ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    header "checking for references to $TMPDIR/ in $dir...";
    local i;
    while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if isELF "$i"; then
            if { 
                printf :;
                patchelf --print-rpath "$i"
            } | grep -q -F ":$TMPDIR/"; then
                echo "RPATH of binary $i contains a forbidden reference to $TMPDIR/";
                exit 1;
            fi;
        fi;
        if isScript "$i"; then
            if [ -e "$(dirname "$i")/.$(basename "$i")-wrapped" ]; then
                if grep -q -F "$TMPDIR/" "$i"; then
                    echo "wrapper script $i contains a forbidden reference to $TMPDIR/";
                    exit 1;
                fi;
            fi;
        fi;
    done < <(find "$dir" -type f -print0);
    stopNest
}
bintoolsWrapper_addLDVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [[ -d "$1/lib64" && ! -L "$1/lib64" ]]; then
        export NIX_LDFLAGS${role_post}+=" -L$1/lib64";
    fi;
    if [[ -d "$1/lib" ]]; then
        local -a glob=($1/lib/lib*);
        if [ "${#glob[*]}" -gt 0 ]; then
            export NIX_LDFLAGS${role_post}+=" -L$1/lib";
        fi;
    fi
}
buildPhase ()
{
 
    runHook preBuild;
    : ${makeFlags=};
    if [[ -z "$makeFlags" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile, doing nothing";
    else
        foundMakefile=1;
        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES} -l${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags ${makeFlagsArray+"${makeFlagsArray[@]}"} $buildFlags ${buildFlagsArray+"${buildFlagsArray[@]}"});
        echoCmd 'build flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postBuild
}
ccWrapper_addCVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [ -d "$1/include" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -isystem $1/include";
    fi;
    if [ -d "$1/Library/Frameworks" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -iframework $1/Library/Frameworks";
    fi
}
checkPhase ()
{
 
    runHook preCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom checkPhase, doing nothing";
        runHook postCheck;
        return;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then
            checkTarget=check;
        else
            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then
                checkTarget=test;
            fi;
        fi;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        echo "no check/test target in ${makefile:-Makefile}, doing nothing";
    else
        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES} -l${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags ${makeFlagsArray+"${makeFlagsArray[@]}"} ${checkFlags:-VERBOSE=y} ${checkFlagsArray+"${checkFlagsArray[@]}"} ${checkTarget});
        echoCmd 'check flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postCheck
}
closeNest ()
{
 
    true
}
compressManPages ()
{
 
    local dir="$1";
    if [ -L "$dir"/share ] || [ -L "$dir"/share/man ] || [ ! -d "$dir/share/man" ]; then
        return;
    fi;
    echo "gzipping man pages under $dir/share/man/";
    find "$dir"/share/man/ -type f -a '!' -regex '.*\.\(bz2\|gz\)$' -print0 | while IFS= read -r -d '' f; do
        if gzip -c -n "$f" > "$f".gz; then
            rm "$f";
        else
            rm "$f".gz;
        fi;
    done;
    find "$dir"/share/man/ -type l -a '!' -regex '.*\.\(bz2\|gz\)$' -print0 | sort -z | while IFS= read -r -d '' f; do
        local target;
        target="$(readlink -f "$f")";
        if [ -f "$target".gz ]; then
            ln -sf "$target".gz "$f".gz && rm "$f";
        fi;
    done
}
configurePhase ()
{
 
    runHook preConfigure;
    : ${configureScript=};
    : ${configureFlags=};
    if [[ -z "$configureScript" && -x ./configure ]]; then
        configureScript=./configure;
    fi;
    if [ -z "${dontFixLibtool:-}" ]; then
        local i;
        find . -iname "ltmain.sh" -print0 | while IFS='' read -r -d '' i; do
            echo "fixing libtool script $i";
            fixLibtool "$i";
        done;
    fi;
    if [[ -z "${dontAddPrefix:-}" && -n "$prefix" ]]; then
        configureFlags="${prefixKey:---prefix=}$prefix $configureFlags";
    fi;
    if [ -z "${dontAddDisableDepTrack:-}" ]; then
        if [ -f "$configureScript" ] && grep -q dependency-tracking "$configureScript"; then
            configureFlags="--disable-dependency-tracking $configureFlags";
        fi;
    fi;
    if [ -z "${dontDisableStatic:-}" ]; then
        if [ -f "$configureScript" ] && grep -q enable-static "$configureScript"; then
            configureFlags="--disable-static $configureFlags";
        fi;
    fi;
    if [ -n "$configureScript" ]; then
        local flagsArray=($configureFlags ${configureFlagsArray+"${configureFlagsArray[@]}"});
        echoCmd 'configure flags' "${flagsArray[@]}";
        $configureScript "${flagsArray[@]}";
        unset flagsArray;
    else
        echo "no configure script, doing nothing";
    fi;
    runHook postConfigure
}
consumeEntire ()
{
 
    if IFS='' read -r -N 0 $1; then
        echo "consumeEntire(): ERROR: Input null bytes, won't process" 1>&2;
        return 1;
    fi
}
distPhase ()
{
 
    runHook preDist;
    local flagsArray=($distFlags ${distFlagsArray+"${distFlagsArray[@]}"} ${distTarget:-dist});
    echo 'dist flags: %q' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    if [ "${dontCopyDist:-0}" != 1 ]; then
        mkdir -p "$out/tarballs";
        cp -pvd ${tarballs:-*.tar.gz} "$out/tarballs";
    fi;
    runHook postDist
}
dropIconThemeCache ()
{
 
    if [[ -z "${dontDropIconThemeCache:-}" ]]; then
        local icondir="${out:?}/share/icons";
        if [[ -d "${icondir}" ]]; then
            find "${icondir}" -name 'icon-theme.cache' -print0 | while IFS= read -r -d '' file; do
                echo "Removing ${file}";
                rm -f "${file}";
            done;
        fi;
    fi
}
dumpVars ()
{
 
    if [ "${noDumpEnvVars:-0}" != 1 ]; then
        export 2> /dev/null >| "$NIX_BUILD_TOP/env-vars" || true;
    fi
}
echoCmd ()
{
 
    printf "%s:" "$1";
    shift;
    printf ' %q' "$@";
    echo
}
exitHandler ()
{
 
    exitCode="$?";
    set +e;
    if [ -n "${showBuildStats:-}" ]; then
        times > "$NIX_BUILD_TOP/.times";
        local -a times=($(cat "$NIX_BUILD_TOP/.times"));
        echo "build time elapsed: " "${times[@]}";
    fi;
    if (( "$exitCode" != 0 )); then
        runHook failureHook;
        if [ -n "${succeedOnFailure:-}" ]; then
            echo "build failed with exit code $exitCode (ignored)";
            mkdir -p "$out/nix-support";
            printf "%s" "$exitCode" > "$out/nix-support/failed";
            exit 0;
        fi;
    else
        runHook exitHook;
    fi;
    exit "$exitCode"
}
findGdkPixbufLoaders ()
{
 
    local loadersCache="$1/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache";
    if [[ -f "$loadersCache" ]]; then
        if [[ -f "${GDK_PIXBUF_MODULE_FILE-}" ]]; then
            if (( "$(cat "$loadersCache" | wc -l)" > "$(cat "$GDK_PIXBUF_MODULE_FILE" | wc -l)" )); then
                export GDK_PIXBUF_MODULE_FILE="$loadersCache";
            fi;
        else
            export GDK_PIXBUF_MODULE_FILE="$loadersCache";
        fi;
    fi
}
findInputs ()
{
 
    local -r pkg="$1";
    local -ri hostOffset="$2";
    local -ri targetOffset="$3";
    (( "$hostOffset" <= "$targetOffset" )) || exit -1;
    local varVar="${pkgAccumVarVars[$hostOffset + 1]}";
    local varRef="$varVar[\$targetOffset - \$hostOffset]";
    local var="${!varRef}";
    unset -v varVar varRef;
    local varSlice="$var[*]";
    case "${!varSlice-}" in 
        *" $pkg "*)
            return 0
        ;;
    esac;
    unset -v varSlice;
    eval "$var"'+=("$pkg")';
    if ! [ -e "$pkg" ]; then
        echo "build input $pkg does not exist" 1>&2;
        exit 1;
    fi;
    local -i mapOffsetResult;
    function mapOffset () 
    { 
        local -ri inputOffset="$1";
        if (( "$inputOffset" <= 0 )); then
            local -ri outputOffset="$inputOffset + $hostOffset";
        else
            local -ri outputOffset="$inputOffset - 1 + $targetOffset";
        fi;
        mapOffsetResult="$outputOffset"
    };
    local -i relHostOffset;
    for relHostOffset in "${allPlatOffsets[@]}";
    do
        local files="${propagatedDepFilesVars[$relHostOffset + 1]}";
        mapOffset relHostOffset;
        local -i hostOffsetNext="$mapOffsetResult";
        [[ "${allPlatOffsets[*]}" = *"$hostOffsetNext"* ]] || continue;
        local -i relTargetOffset;
        for relTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$relHostOffset" <= "$relTargetOffset" )) || continue;
            local fileRef="${files}[$relTargetOffset - $relHostOffset]";
            local file="${!fileRef}";
            unset -v fileRef;
            mapOffset relTargetOffset;
            local -i targetOffsetNext="$mapOffsetResult";
            [[ "${allPlatOffsets[*]}" = *"$targetOffsetNext"* ]] || continue;
            [[ -f "$pkg/nix-support/$file" ]] || continue;
            local pkgNext;
            read -r -d '' pkgNext < "$pkg/nix-support/$file" || true;
            for pkgNext in $pkgNext;
            do
                findInputs "$pkgNext" "$hostOffsetNext" "$targetOffsetNext";
            done;
        done;
    done
}
fixLibtool ()
{
 
    sed -i -e 's^eval sys_lib_.*search_path=.*^^' "$1"
}
fixupPhase ()
{
 
    local output;
    for output in $outputs;
    do
        if [ -e "${!output}" ]; then
            chmod -R u+w "${!output}";
        fi;
    done;
    runHook preFixup;
    local output;
    for output in $outputs;
    do
        prefix="${!output}" runHook fixupOutput;
    done;
    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);
    declare -ra flatFiles=("${propagatedBuildDepFiles[@]}" "${propagatedHostDepFiles[@]}" "${propagatedTargetDepFiles[@]}");
    local propagatedInputsIndex;
    for propagatedInputsIndex in "${!flatVars[@]}";
    do
        local propagatedInputsSlice="${flatVars[$propagatedInputsIndex]}[@]";
        local propagatedInputsFile="${flatFiles[$propagatedInputsIndex]}";
        [[ -n "${!propagatedInputsSlice}" ]] || continue;
        mkdir -p "${!outputDev}/nix-support";
        printWords ${!propagatedInputsSlice} > "${!outputDev}/nix-support/$propagatedInputsFile";
    done;
    if [ -n "${setupHook:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        substituteAll "$setupHook" "${!outputDev}/nix-support/setup-hook";
    fi;
    if [ -n "${setupHooks:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        local hook;
        for hook in $setupHooks;
        do
            local content;
            consumeEntire content < "$hook";
            substituteAllStream content "file '$hook'" >> "${!outputDev}/nix-support/setup-hook";
            unset -v content;
        done;
        unset -v hook;
    fi;
    if [ -n "${propagatedUserEnvPkgs:-}" ]; then
        mkdir -p "${!outputBin}/nix-support";
        printWords $propagatedUserEnvPkgs > "${!outputBin}/nix-support/propagated-user-env-packages";
    fi;
    runHook postFixup
}
genericBuild ()
{
 
    if [ -f "${buildCommandPath:-}" ]; then
        source "$buildCommandPath";
        return;
    fi;
    if [ -n "${buildCommand:-}" ]; then
        eval "$buildCommand";
        return;
    fi;
    if [ -z "${phases:-}" ]; then
        phases="${prePhases:-} unpackPhase patchPhase ${preConfigurePhases:-}             configurePhase ${preBuildPhases:-} buildPhase checkPhase             ${preInstallPhases:-} installPhase ${preFixupPhases:-} fixupPhase installCheckPhase             ${preDistPhases:-} distPhase ${postPhases:-}";
    fi;
    for curPhase in $phases;
    do
        if [[ "$curPhase" = unpackPhase && -n "${dontUnpack:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = patchPhase && -n "${dontPatch:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = configurePhase && -n "${dontConfigure:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = buildPhase && -n "${dontBuild:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = checkPhase && -z "${doCheck:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = installPhase && -n "${dontInstall:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = fixupPhase && -n "${dontFixup:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = installCheckPhase && -z "${doInstallCheck:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = distPhase && -z "${doDist:-}" ]]; then
            continue;
        fi;
        if [[ -n $NIX_LOG_FD ]]; then
            echo "@nix { \"action\": \"setPhase\", \"phase\": \"$curPhase\" }" 1>&$NIX_LOG_FD;
        fi;
        showPhaseHeader "$curPhase";
        dumpVars;
        eval "${!curPhase:-$curPhase}";
        if [ "$curPhase" = unpackPhase ]; then
            cd "${sourceRoot:-.}";
        fi;
    done
}
getHostRole ()
{
 
    getRole "$hostOffset"
}
getHostRoleEnvHook ()
{
 
    getRole "$depHostOffset"
}
getRole ()
{
 
    case $1 in 
        -1)
            role_post='_FOR_BUILD'
        ;;
        0)
            role_post=''
        ;;
        1)
            role_post='_FOR_TARGET'
        ;;
        *)
            echo "pkg-config-wrapper-0.29.2: used as improper sort of dependency" > 2;
            return 1
        ;;
    esac
}
getTargetRole ()
{
 
    getRole "$targetOffset"
}
getTargetRoleEnvHook ()
{
 
    getRole "$depTargetOffset"
}
getTargetRoleWrapper ()
{
 
    case $targetOffset in 
        -1)
            export NIX_PKG_CONFIG_WRAPPER_TARGET_BUILD_x86_64_unknown_linux_gnu=1
        ;;
        0)
            export NIX_PKG_CONFIG_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu=1
        ;;
        1)
            export NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu=1
        ;;
        *)
            echo "pkg-config-wrapper-0.29.2: used as improper sort of dependency" > 2;
            return 1
        ;;
    esac
}
gettextDataDirsHook ()
{
 
    getHostRoleEnvHook;
    if [ -d "$1/share/gettext" ]; then
        addToSearchPath "GETTEXTDATADIRS${role_post}" "$1/share/gettext";
    fi
}
giDiscoverSelf ()
{
 
    if [ -d "$prefix/lib/girepository-1.0" ]; then
        addToSearchPath GI_TYPELIB_PATH $prefix/lib/girepository-1.0;
    fi
}
glibPreFixupPhase ()
{
 
    if [ -d "$prefix/share/glib-2.0/schemas" ]; then
        mkdir -p "${!outputLib}/share/gsettings-schemas/$name/glib-2.0";
        mv "$prefix/share/glib-2.0/schemas" "${!outputLib}/share/gsettings-schemas/$name/glib-2.0/";
    fi;
    addToSearchPath GSETTINGS_SCHEMAS_PATH "${!outputLib}/share/gsettings-schemas/$name"
}
glibPreInstallPhase ()
{
 
    makeFlagsArray+=("gsettingsschemadir=${!outputLib}/share/gsettings-schemas/$name/glib-2.0/schemas/")
}
header ()
{
 
    echo "$1"
}
installCheckPhase ()
{
 
    runHook preInstallCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom installCheckPhase, doing nothing";
    else
        if [[ -z "${installCheckTarget:-}" ]] && ! make -n ${makefile:+-f $makefile} ${installCheckTarget:-installcheck} > /dev/null 2>&1; then
            echo "no installcheck target in ${makefile:-Makefile}, doing nothing";
        else
            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES} -l${NIX_BUILD_CORES}} SHELL=$SHELL $makeFlags ${makeFlagsArray+"${makeFlagsArray[@]}"} $installCheckFlags ${installCheckFlagsArray+"${installCheckFlagsArray[@]}"} ${installCheckTarget:-installcheck});
            echoCmd 'installcheck flags' "${flagsArray[@]}";
            make ${makefile:+-f $makefile} "${flagsArray[@]}";
            unset flagsArray;
        fi;
    fi;
    runHook postInstallCheck
}
installPhase ()
{
 
    runHook preInstall;
    if [ -n "$prefix" ]; then
        mkdir -p "$prefix";
    fi;
    local flagsArray=(SHELL=$SHELL $makeFlags ${makeFlagsArray+"${makeFlagsArray[@]}"} $installFlags ${installFlagsArray+"${installFlagsArray[@]}"} ${installTargets:-install});
    echoCmd 'install flags' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    unset flagsArray;
    runHook postInstall
}
isELF ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [ "$magic" = 'ELF' ]; then
        return 0;
    else
        return 1;
    fi
}
isScript ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 2 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" =~ \#! ]]; then
        return 0;
    else
        return 1;
    fi
}
make_glib_find_gsettings_schemas ()
{
 
    for maybe_dir in "$1"/share/gsettings-schemas/*;
    do
        if [[ -d "$maybe_dir/glib-2.0/schemas" ]]; then
            addToSearchPath GSETTINGS_SCHEMAS_PATH "$maybe_dir";
        fi;
    done
}
make_gobject_introspection_find_gir_files ()
{
 
    if [ -d "$1/lib/girepository-1.0" ]; then
        addToSearchPath GI_TYPELIB_PATH $1/lib/girepository-1.0;
    fi;
    if [ -d "$1/share/gir-1.0" ]; then
        addToSearchPath XDG_DATA_DIRS $1/share;
    fi
}
mapOffset ()
{
 
    local -ri inputOffset="$1";
    if (( "$inputOffset" <= 0 )); then
        local -ri outputOffset="$inputOffset + $hostOffset";
    else
        local -ri outputOffset="$inputOffset - 1 + $targetOffset";
    fi;
    mapOffsetResult="$outputOffset"
}
moveToOutput ()
{
 
    local patt="$1";
    local dstOut="$2";
    local output;
    for output in $outputs;
    do
        if [ "${!output}" = "$dstOut" ]; then
            continue;
        fi;
        local srcPath;
        for srcPath in "${!output}"/$patt;
        do
            if [ ! -e "$srcPath" ] && [ ! -L "$srcPath" ]; then
                continue;
            fi;
            if [ "$dstOut" = REMOVE ]; then
                echo "Removing $srcPath";
                rm -r "$srcPath";
            else
                local dstPath="$dstOut${srcPath#${!output}}";
                echo "Moving $srcPath to $dstPath";
                if [ -d "$dstPath" ] && [ -d "$srcPath" ]; then
                    rmdir "$srcPath" --ignore-fail-on-non-empty;
                    if [ -d "$srcPath" ]; then
                        mv -t "$dstPath" "$srcPath"/*;
                        rmdir "$srcPath";
                    fi;
                else
                    mkdir -p "$(readlink -m "$dstPath/..")";
                    mv "$srcPath" "$dstPath";
                fi;
            fi;
            local srcParent="$(readlink -m "$srcPath/..")";
            if rmdir "$srcParent"; then
                echo "Removing empty $srcParent/ and (possibly) its parents";
                rmdir -p --ignore-fail-on-non-empty "$(readlink -m "$srcParent/..")" 2> /dev/null || true;
            fi;
        done;
    done
}
patchELF ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    header "shrinking RPATHs of ELF executables and libraries in $dir";
    local i;
    while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if ! isELF "$i"; then
            continue;
        fi;
        echo "shrinking $i";
        patchelf --shrink-rpath "$i" || true;
    done < <(find "$dir" -type f -print0);
    stopNest
}
patchPhase ()
{
 
    runHook prePatch;
    for i in ${patches:-};
    do
        header "applying patch $i" 3;
        local uncompress=cat;
        case "$i" in 
            *.gz)
                uncompress="gzip -d"
            ;;
            *.bz2)
                uncompress="bzip2 -d"
            ;;
            *.xz)
                uncompress="xz -d"
            ;;
            *.lzma)
                uncompress="lzma -d"
            ;;
        esac;
        $uncompress < "$i" 2>&1 | patch ${patchFlags:--p1};
    done;
    runHook postPatch
}
patchShebangs ()
{
 
    local pathName;
    if [[ "$1" == "--host" ]]; then
        pathName=HOST_PATH;
        shift;
    else
        if [[ "$1" == "--build" ]]; then
            pathName=PATH;
            shift;
        fi;
    fi;
    echo "patching script interpreter paths in $@";
    local f;
    local oldPath;
    local newPath;
    local arg0;
    local args;
    local oldInterpreterLine;
    local newInterpreterLine;
    if [[ $# -eq 0 ]]; then
        echo "No arguments supplied to patchShebangs" 1>&2;
        return 0;
    fi;
    local f;
    while IFS= read -r -d '' f; do
        isScript "$f" || continue;
        read -r oldInterpreterLine < "$f";
        read -r oldPath arg0 args <<< "${oldInterpreterLine:2}";
        if [[ -z "$pathName" ]]; then
            if [[ -n $strictDeps && $f == "$NIX_STORE"* ]]; then
                pathName=HOST_PATH;
            else
                pathName=PATH;
            fi;
        fi;
        if [[ "$oldPath" == *"/bin/env" ]]; then
            if [[ $arg0 == "-"* || $arg0 == *"="* ]]; then
                echo "$f: unsupported interpreter directive \"$oldInterpreterLine\" (set dontPatchShebangs=1 and handle shebang patching yourself)" 1>&2;
                exit 1;
            fi;
            newPath="$(PATH="${!pathName}" command -v "$arg0" || true)";
        else
            if [[ -z $oldPath ]]; then
                oldPath="/bin/sh";
            fi;
            newPath="$(PATH="${!pathName}" command -v "$(basename "$oldPath")" || true)";
            args="$arg0 $args";
        fi;
        newInterpreterLine="$newPath $args";
        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};
        if [[ -n "$oldPath" && "${oldPath:0:${#NIX_STORE}}" != "$NIX_STORE" ]]; then
            if [[ -n "$newPath" && "$newPath" != "$oldPath" ]]; then
                echo "$f: interpreter directive changed from \"$oldInterpreterLine\" to \"$newInterpreterLine\"";
                escapedInterpreterLine=${newInterpreterLine//\\/\\\\};
                timestamp=$(stat --printf "%y" "$f");
                sed -i -e "1 s|.*|#\!$escapedInterpreterLine|" "$f";
                touch --date "$timestamp" "$f";
            fi;
        fi;
    done < <(find "$@" -type f -perm -0100 -print0);
    stopNest
}
patchShebangsAuto ()
{
 
    if [[ -z "${dontPatchShebangs-}" && -e "$prefix" ]]; then
        if [[ "$output" != out && "$output" = "$outputDev" ]]; then
            patchShebangs --build "$prefix";
        else
            patchShebangs --host "$prefix";
        fi;
    fi
}
pkgConfigWrapper_addPkgConfigPath ()
{
 
    local role_post;
    getHostRoleEnvHook;
    addToSearchPath "PKG_CONFIG_PATH${role_post}" "$1/lib/pkgconfig";
    addToSearchPath "PKG_CONFIG_PATH${role_post}" "$1/share/pkgconfig"
}
printLines ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s\n' "$@"
}
printWords ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s ' "$@"
}
runHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook;
    for hook in "_callImplicitHook 0 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _eval "$hook" "$@";
    done;
    return 0
}
runOneHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook ret=1;
    for hook in "_callImplicitHook 1 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        if _eval "$hook" "$@"; then
            ret=0;
            break;
        fi;
    done;
    return "$ret"
}
showPhaseHeader ()
{
 
    local phase="$1";
    case "$phase" in 
        unpackPhase)
            header "unpacking sources"
        ;;
        patchPhase)
            header "patching sources"
        ;;
        configurePhase)
            header "configuring"
        ;;
        buildPhase)
            header "building"
        ;;
        checkPhase)
            header "running tests"
        ;;
        installPhase)
            header "installing"
        ;;
        fixupPhase)
            header "post-installation fixup"
        ;;
        installCheckPhase)
            header "running install tests"
        ;;
        *)
            header "$phase"
        ;;
    esac
}
stopNest ()
{
 
    true
}
stripDirs ()
{
 
    local cmd="$1";
    local dirs="$2";
    local stripFlags="$3";
    local dirsNew=;
    local d;
    for d in ${dirs};
    do
        if [ -d "$prefix/$d" ]; then
            dirsNew="${dirsNew} $prefix/$d ";
        fi;
    done;
    dirs=${dirsNew};
    if [ -n "${dirs}" ]; then
        header "stripping (with command $cmd and flags $stripFlags) in$dirs";
        find $dirs -type f -exec $cmd $commonStripFlags $stripFlags '{}' \; 2> /dev/null;
        stopNest;
    fi
}
stripHash ()
{
 
    local strippedName casematchOpt=0;
    strippedName="$(basename -- "$1")";
    shopt -q nocasematch && casematchOpt=1;
    shopt -u nocasematch;
    if [[ "$strippedName" =~ ^[a-z0-9]{32}- ]]; then
        echo "${strippedName:33}";
    else
        echo "$strippedName";
    fi;
    if (( casematchOpt )); then
        shopt -s nocasematch;
    fi
}
substitute ()
{
 
    local input="$1";
    local output="$2";
    shift 2;
    if [ ! -f "$input" ]; then
        echo "substitute(): ERROR: file '$input' does not exist" 1>&2;
        return 1;
    fi;
    local content;
    consumeEntire content < "$input";
    if [ -e "$output" ]; then
        chmod +w "$output";
    fi;
    substituteStream content "file '$input'" "$@" > "$output"
}
substituteAll ()
{
 
    local input="$1";
    local output="$2";
    local -a args=();
    _allFlags;
    substitute "$input" "$output" "${args[@]}"
}
substituteAllInPlace ()
{
 
    local fileName="$1";
    shift;
    substituteAll "$fileName" "$fileName" "$@"
}
substituteAllStream ()
{
 
    local -a args=();
    _allFlags;
    substituteStream "$1" "$2" "${args[@]}"
}
substituteInPlace ()
{
 
    local fileName="$1";
    shift;
    substitute "$fileName" "$fileName" "$@"
}
substituteStream ()
{
 
    local var=$1;
    local description=$2;
    shift 2;
    while (( "$#" )); do
        case "$1" in 
            --replace)
                pattern="$2";
                replacement="$3";
                shift 3;
                local savedvar;
                savedvar="${!var}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                if [ "$pattern" != "$replacement" ]; then
                    if [ "${!var}" == "$savedvar" ]; then
                        echo "substituteStream(): WARNING: pattern '$pattern' doesn't match anything in $description" 1>&2;
                    fi;
                fi
            ;;
            --subst-var)
                local varName="$2";
                shift 2;
                if ! [[ "$varName" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
                    echo "substituteStream(): ERROR: substitution variables must be valid Bash names, \"$varName\" isn't." 1>&2;
                    return 1;
                fi;
                if [ -z ${!varName+x} ]; then
                    echo "substituteStream(): ERROR: variable \$$varName is unset" 1>&2;
                    return 1;
                fi;
                pattern="@$varName@";
                replacement="${!varName}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var-by)
                pattern="@$2@";
                replacement="$3";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                shift 3
            ;;
            *)
                echo "substituteStream(): ERROR: Invalid command line argument: $1" 1>&2;
                return 1
            ;;
        esac;
    done;
    printf "%s" "${!var}"
}
unpackFile ()
{
 
    curSrc="$1";
    header "unpacking source archive $curSrc" 3;
    if ! runOneHook unpackCmd "$curSrc"; then
        echo "do not know how to unpack source archive $curSrc";
        exit 1;
    fi
}
unpackPhase ()
{
 
    runHook preUnpack;
    if [ -z "${srcs:-}" ]; then
        if [ -z "${src:-}" ]; then
            echo 'variable $src or $srcs should point to the source';
            exit 1;
        fi;
        srcs="$src";
    fi;
    local dirsBefore="";
    for i in *;
    do
        if [ -d "$i" ]; then
            dirsBefore="$dirsBefore $i ";
        fi;
    done;
    for i in $srcs;
    do
        unpackFile "$i";
    done;
    : ${sourceRoot=};
    if [ -n "${setSourceRoot:-}" ]; then
        runOneHook setSourceRoot;
    else
        if [ -z "$sourceRoot" ]; then
            for i in *;
            do
                if [ -d "$i" ]; then
                    case $dirsBefore in 
                        *\ $i\ *)

                        ;;
                        *)
                            if [ -n "$sourceRoot" ]; then
                                echo "unpacker produced multiple directories";
                                exit 1;
                            fi;
                            sourceRoot="$i"
                        ;;
                    esac;
                fi;
            done;
        fi;
    fi;
    if [ -z "$sourceRoot" ]; then
        echo "unpacker appears to have produced no directories";
        exit 1;
    fi;
    echo "source root is $sourceRoot";
    if [ "${dontMakeSourcesWritable:-0}" != 1 ]; then
        chmod -R u+w -- "$sourceRoot";
    fi;
    runHook postUnpack
}
updateSourceDateEpoch ()
{
 
    local path="$1";
    local -a res=($(find "$path" -type f -not -newer "$NIX_BUILD_TOP/.." -printf '%T@ %p\0'                     | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));
    local time="${res[0]//\.[0-9]*/}";
    local newestFile="${res[1]}";
    if [ "${time:-0}" -gt "$SOURCE_DATE_EPOCH" ]; then
        echo "setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile";
        export SOURCE_DATE_EPOCH="$time";
        local now="$(date +%s)";
        if [ "$time" -gt $((now - 60)) ]; then
            echo "warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic";
        fi;
    fi
}
PATH="$PATH${nix_saved_PATH:+:$nix_saved_PATH}"
XDG_DATA_DIRS="$XDG_DATA_DIRS${nix_saved_XDG_DATA_DIRS:+:$nix_saved_XDG_DATA_DIRS}"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "$shellHook"
